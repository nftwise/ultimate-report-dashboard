"use strict";
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **
Object.defineProperty(exports, "__esModule", { value: true });
exports.AudienceServiceClient = void 0;
const jsonProtos = require("../../protos/protos.json");
const google_gax_1 = require("google-gax");
/**
 * Client JSON configuration object, loaded from
 * `src/v21/audience_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
const gapicConfig = require("./audience_service_client_config.json");
const version = require('../../../package.json').version;
/**
 *  Service to manage audiences.
 * @class
 * @memberof v21
 */
class AudienceServiceClient {
    _terminated = false;
    _opts;
    _providedCustomServicePath;
    _gaxModule;
    _gaxGrpc;
    _protos;
    _defaults;
    _universeDomain;
    _servicePath;
    _log = google_gax_1.loggingUtils.log('google-ads');
    auth;
    descriptors = {
        page: {},
        stream: {},
        longrunning: {},
        batching: {},
    };
    warn;
    innerApiCalls;
    pathTemplates;
    audienceServiceStub;
    /**
     * Construct an instance of AudienceServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://cloud.google.com/docs/authentication/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new AudienceServiceClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts, gaxInstance) {
        // Ensure that options include all the required fields.
        const staticMembers = this.constructor;
        if (opts?.universe_domain && opts?.universeDomain && opts?.universe_domain !== opts?.universeDomain) {
            throw new Error('Please set either universe_domain or universeDomain, but not both.');
        }
        const universeDomainEnvVar = (typeof process === 'object' && typeof process.env === 'object') ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;
        this._universeDomain = opts?.universeDomain ?? opts?.universe_domain ?? universeDomainEnvVar ?? 'googleapis.com';
        this._servicePath = 'googleads.' + this._universeDomain;
        const servicePath = opts?.servicePath || opts?.apiEndpoint || this._servicePath;
        this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
        const port = opts?.port || staticMembers.port;
        const clientConfig = opts?.clientConfig ?? {};
        const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);
        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
        if (servicePath !== this._servicePath && !('scopes' in opts)) {
            opts['scopes'] = staticMembers.scopes;
        }
        // Load google-gax module synchronously if needed
        if (!gaxInstance) {
            gaxInstance = require('google-gax');
        }
        // Choose either gRPC or proto-over-HTTP implementation of google-gax.
        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;
        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);
        // Save options to use in initialize() method.
        this._opts = opts;
        // Save the auth object to the client, for use by other methods.
        this.auth = this._gaxGrpc.auth;
        // Set useJWTAccessWithScope on the auth object.
        this.auth.useJWTAccessWithScope = true;
        // Set defaultServicePath on the auth object.
        this.auth.defaultServicePath = this._servicePath;
        // Set the default scopes in auth client if needed.
        if (servicePath === this._servicePath) {
            this.auth.defaultScopes = staticMembers.scopes;
        }
        // Determine the client header string.
        const clientHeader = [
            `gax/${this._gaxModule.version}`,
            `gapic/${version}`,
        ];
        if (typeof process === 'object' && 'versions' in process) {
            clientHeader.push(`gl-node/${process.versions.node}`);
        }
        else {
            clientHeader.push(`gl-web/${this._gaxModule.version}`);
        }
        if (!opts.fallback) {
            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
        }
        else {
            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
        }
        if (opts.libName && opts.libVersion) {
            clientHeader.push(`${opts.libName}/${opts.libVersion}`);
        }
        // Load the applicable protos.
        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);
        // This API contains "path templates"; forward-slash-separated
        // identifiers to uniquely identify resources within the API.
        // Create useful helper objects for these.
        this.pathTemplates = {
            accessibleBiddingStrategyPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/accessibleBiddingStrategies/{bidding_strategy_id}'),
            accountBudgetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/accountBudgets/{account_budget_id}'),
            accountBudgetProposalPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/accountBudgetProposals/{account_budget_proposal_id}'),
            accountLinkPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/accountLinks/{account_link_id}'),
            adPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/ads/{ad_id}'),
            adGroupPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroups/{ad_group_id}'),
            adGroupAdPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupAds/{ad_group_id}~{ad_id}'),
            adGroupAdAssetCombinationViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupAdAssetCombinationViews/{ad_group_id}~{ad_id}~{asset_combination_id_low}~{asset_combination_id_high}'),
            adGroupAdAssetViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupAdAssetViews/{ad_group_id}~{ad_id}~{asset_id}~{field_type}'),
            adGroupAdLabelPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupAdLabels/{ad_group_id}~{ad_id}~{label_id}'),
            adGroupAssetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupAssets/{ad_group_id}~{asset_id}~{field_type}'),
            adGroupAssetSetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupAssetSets/{ad_group_id}~{asset_set_id}'),
            adGroupAudienceViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupAudienceViews/{ad_group_id}~{criterion_id}'),
            adGroupBidModifierPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupBidModifiers/{ad_group_id}~{criterion_id}'),
            adGroupCriterionPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupCriteria/{ad_group_id}~{criterion_id}'),
            adGroupCriterionCustomizerPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupCriterionCustomizers/{ad_group_id}~{criterion_id}~{customizer_attribute_id}'),
            adGroupCriterionLabelPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupCriterionLabels/{ad_group_id}~{criterion_id}~{label_id}'),
            adGroupCriterionSimulationPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupCriterionSimulations/{ad_group_id}~{criterion_id}~{type}~{modification_method}~{start_date}~{end_date}'),
            adGroupCustomizerPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupCustomizers/{ad_group_id}~{customizer_attribute_id}'),
            adGroupLabelPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupLabels/{ad_group_id}~{label_id}'),
            adGroupSimulationPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adGroupSimulations/{ad_group_id}~{type}~{modification_method}~{start_date}~{end_date}'),
            adParameterPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adParameters/{ad_group_id}~{criterion_id}~{parameter_index}'),
            adScheduleViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/adScheduleViews/{campaign_id}~{criterion_id}'),
            ageRangeViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/ageRangeViews/{ad_group_id}~{criterion_id}'),
            aiMaxSearchTermAdCombinationViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/aiMaxSearchTermAdCombinationViews/{ad_group_id}~{search_term}~{landing_page}~{headline}'),
            androidPrivacySharedKeyGoogleAdGroupPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/androidPrivacySharedKeyGoogleAdGroups/{campaign_id}~{ad_group_id}~{android_privacy_interaction_type}~{android_privacy_network_type}~{android_privacy_interaction_date}'),
            androidPrivacySharedKeyGoogleCampaignPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/androidPrivacySharedKeyGoogleCampaigns/{campaign_id}~{android_privacy_interaction_type}~{android_privacy_interaction_date}'),
            androidPrivacySharedKeyGoogleNetworkTypePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/androidPrivacySharedKeyGoogleNetworkTypes/{campaign_id}~{android_privacy_interaction_type}~{android_privacy_network_type}~{android_privacy_interaction_date}'),
            assetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assets/{asset_id}'),
            assetFieldTypeViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetFieldTypeViews/{field_type}'),
            assetGroupPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetGroups/{asset_group_id}'),
            assetGroupAssetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetGroupAssets/{asset_group_id}~{asset_id}~{field_type}'),
            assetGroupListingGroupFilterPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetGroupListingGroupFilters/{asset_group_id}~{listing_group_filter_id}'),
            assetGroupProductGroupViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetGroupProductGroupViews/{asset_group_id}~{listing_group_filter_id}'),
            assetGroupSignalPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetGroupSignals/{asset_group_id}~{criterion_id}'),
            assetGroupTopCombinationViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetGroupTopCombinationViews/{asset_group_id}~{asset_combination_category}'),
            assetSetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetSets/{asset_set_id}'),
            assetSetAssetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetSetAssets/{asset_set_id}~{asset_id}'),
            assetSetTypeViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/assetSetTypeViews/{asset_set_type}'),
            audiencePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/audiences/{audience_id}'),
            batchJobPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/batchJobs/{batch_job_id}'),
            biddingDataExclusionPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/biddingDataExclusions/{seasonality_event_id}'),
            biddingSeasonalityAdjustmentPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/biddingSeasonalityAdjustments/{seasonality_event_id}'),
            biddingStrategyPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/biddingStrategies/{bidding_strategy_id}'),
            biddingStrategySimulationPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/biddingStrategySimulations/{bidding_strategy_id}~{type}~{modification_method}~{start_date}~{end_date}'),
            billingSetupPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/billingSetups/{billing_setup_id}'),
            callViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/callViews/{call_detail_id}'),
            campaignPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaigns/{campaign_id}'),
            campaignAggregateAssetViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignAggregateAssetViews/{campaign_id}~{asset_id}~{asset_link_source}~{field_type}'),
            campaignAssetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignAssets/{campaign_id}~{asset_id}~{field_type}'),
            campaignAssetSetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignAssetSets/{campaign_id}~{asset_set_id}'),
            campaignAudienceViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignAudienceViews/{campaign_id}~{criterion_id}'),
            campaignBidModifierPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignBidModifiers/{campaign_id}~{criterion_id}'),
            campaignBudgetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignBudgets/{campaign_budget_id}'),
            campaignConversionGoalPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignConversionGoals/{campaign_id}~{category}~{source}'),
            campaignCriterionPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignCriteria/{campaign_id}~{criterion_id}'),
            campaignCustomizerPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignCustomizers/{campaign_id}~{customizer_attribute_id}'),
            campaignDraftPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignDrafts/{base_campaign_id}~{draft_id}'),
            campaignGroupPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignGroups/{campaign_group_id}'),
            campaignLabelPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignLabels/{campaign_id}~{label_id}'),
            campaignLifecycleGoalPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignLifecycleGoals/{campaign_id}'),
            campaignSearchTermInsightPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignSearchTermInsights/{campaign_id}~{cluster_id}'),
            campaignSearchTermViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignSearchTermViews/{campaign_id}~{query}'),
            campaignSharedSetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignSharedSets/{campaign_id}~{shared_set_id}'),
            campaignSimulationPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/campaignSimulations/{campaign_id}~{type}~{modification_method}~{start_date}~{end_date}'),
            carrierConstantPathTemplate: new this._gaxModule.PathTemplate('carrierConstants/{criterion_id}'),
            changeEventPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/changeEvents/{timestamp_micros}~{command_index}~{mutate_index}'),
            changeStatusPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/changeStatus/{change_status_id}'),
            channelAggregateAssetViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/channelAggregateAssetViews/{advertising_channel_type}~{asset_id}~{asset_source}~{field_type}'),
            clickViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/clickViews/{date}~{gclid}'),
            combinedAudiencePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/combinedAudiences/{combined_audience_id}'),
            contentCriterionViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/contentCriterionViews/{ad_group_id}~{criterion_id}'),
            conversionActionPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/conversionActions/{conversion_action_id}'),
            conversionCustomVariablePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/conversionCustomVariables/{conversion_custom_variable_id}'),
            conversionGoalCampaignConfigPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/conversionGoalCampaignConfigs/{campaign_id}'),
            conversionValueRulePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/conversionValueRules/{conversion_value_rule_id}'),
            conversionValueRuleSetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/conversionValueRuleSets/{conversion_value_rule_set_id}'),
            currencyConstantPathTemplate: new this._gaxModule.PathTemplate('currencyConstants/{code}'),
            customAudiencePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customAudiences/{custom_audience_id}'),
            customConversionGoalPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customConversionGoals/{goal_id}'),
            customInterestPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customInterests/{custom_interest_id}'),
            customerPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}'),
            customerAssetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerAssets/{asset_id}~{field_type}'),
            customerAssetSetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerAssetSets/{asset_set_id}'),
            customerClientPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerClients/{client_customer_id}'),
            customerClientLinkPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerClientLinks/{client_customer_id}~{manager_link_id}'),
            customerConversionGoalPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerConversionGoals/{category}~{source}'),
            customerCustomizerPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerCustomizers/{customizer_attribute_id}'),
            customerLabelPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerLabels/{label_id}'),
            customerLifecycleGoalPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerLifecycleGoals'),
            customerManagerLinkPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerManagerLinks/{manager_customer_id}~{manager_link_id}'),
            customerNegativeCriterionPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerNegativeCriteria/{criterion_id}'),
            customerSearchTermInsightPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerSearchTermInsights/{cluster_id}'),
            customerSkAdNetworkConversionValueSchemaPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerSkAdNetworkConversionValueSchemas/{account_link_id}'),
            customerUserAccessPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerUserAccesses/{user_id}'),
            customerUserAccessInvitationPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customerUserAccessInvitations/{invitation_id}'),
            customizerAttributePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/customizerAttributes/{customizer_attribute_id}'),
            dataLinkPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/dataLinks/{product_link_id}~{data_link_id}'),
            detailContentSuitabilityPlacementViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/detailContentSuitabilityPlacementViews/{placement_fingerprint}'),
            detailPlacementViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/detailPlacementViews/{ad_group_id}~{base64_placement}'),
            detailedDemographicPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/detailedDemographics/{detailed_demographic_id}'),
            displayKeywordViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/displayKeywordViews/{ad_group_id}~{criterion_id}'),
            distanceViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/distanceViews/{placeholder_chain_id}~{distance_bucket}'),
            domainCategoryPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/domainCategories/{campaign_id}~{base64_category}~{language_code}'),
            dynamicSearchAdsSearchTermViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/dynamicSearchAdsSearchTermViews/{ad_group_id}~{search_term_fingerprint}~{headline_fingerprint}~{landing_page_fingerprint}~{page_url_fingerprint}'),
            expandedLandingPageViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/expandedLandingPageViews/{expanded_final_url_fingerprint}'),
            experimentPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/experiments/{trial_id}'),
            experimentArmPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/experimentArms/{trial_id}~{trial_arm_id}'),
            finalUrlExpansionAssetViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/finalUrlExpansionAssetViews/{campaign_id}~{asset_id}~{field_type}~{url_fp}'),
            genderViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/genderViews/{ad_group_id}~{criterion_id}'),
            geoTargetConstantPathTemplate: new this._gaxModule.PathTemplate('geoTargetConstants/{criterion_id}'),
            geographicViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/geographicViews/{country_criterion_id}~{location_type}'),
            googleAdsFieldPathTemplate: new this._gaxModule.PathTemplate('googleAdsFields/{google_ads_field}'),
            groupContentSuitabilityPlacementViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/groupContentSuitabilityPlacementViews/{placement_fingerprint}'),
            groupPlacementViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/groupPlacementViews/{ad_group_id}~{base64_placement}'),
            hotelGroupViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/hotelGroupViews/{ad_group_id}~{criterion_id}'),
            hotelPerformanceViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/hotelPerformanceView'),
            hotelReconciliationPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/hotelReconciliations/{commission_id}'),
            incomeRangeViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/incomeRangeViews/{ad_group_id}~{criterion_id}'),
            invoicePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/invoices/{invoice_id}'),
            keywordPlanPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/keywordPlans/{keyword_plan_id}'),
            keywordPlanAdGroupPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/keywordPlanAdGroups/{keyword_plan_ad_group_id}'),
            keywordPlanAdGroupKeywordPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/keywordPlanAdGroupKeywords/{keyword_plan_ad_group_keyword_id}'),
            keywordPlanCampaignPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}'),
            keywordPlanCampaignKeywordPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/keywordPlanCampaignKeywords/{keyword_plan_campaign_keyword_id}'),
            keywordThemeConstantPathTemplate: new this._gaxModule.PathTemplate('keywordThemeConstants/{express_category_id}~{express_sub_category_id}'),
            keywordViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/keywordViews/{ad_group_id}~{criterion_id}'),
            labelPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/labels/{label_id}'),
            landingPageViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/landingPageViews/{unexpanded_final_url_fingerprint}'),
            languageConstantPathTemplate: new this._gaxModule.PathTemplate('languageConstants/{criterion_id}'),
            leadFormSubmissionDataPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/leadFormSubmissionData/{lead_form_user_submission_id}'),
            lifeEventPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/lifeEvents/{life_event_id}'),
            localServicesEmployeePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/localServicesEmployees/{gls_employee_id}'),
            localServicesLeadPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/localServicesLeads/{local_services_lead_id}'),
            localServicesLeadConversationPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/localServicesLeadConversations/{local_services_lead_conversation_id}'),
            localServicesVerificationArtifactPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/localServicesVerificationArtifacts/{gls_verification_artifact_id}'),
            locationInterestViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/locationInterestViews/{campaign_id}~{ad_group_id}~{criterion_id}'),
            locationViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/locationViews/{campaign_id}~{criterion_id}'),
            managedPlacementViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/managedPlacementViews/{ad_group_id}~{criterion_id}'),
            mediaFilePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/mediaFiles/{media_file_id}'),
            mobileAppCategoryConstantPathTemplate: new this._gaxModule.PathTemplate('mobileAppCategoryConstants/{mobile_app_category_id}'),
            mobileDeviceConstantPathTemplate: new this._gaxModule.PathTemplate('mobileDeviceConstants/{criterion_id}'),
            offlineConversionUploadClientSummaryPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/offlineConversionUploadClientSummaries/{client}'),
            offlineConversionUploadConversionActionSummaryPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/offlineConversionUploadConversionActionSummaries/{conversion_type_id}~{client}'),
            offlineUserDataJobPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/offlineUserDataJobs/{offline_user_data_update_id}'),
            operatingSystemVersionConstantPathTemplate: new this._gaxModule.PathTemplate('operatingSystemVersionConstants/{criterion_id}'),
            paidOrganicSearchTermViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/paidOrganicSearchTermViews/{campaign_id}~{ad_group_id}~{base64_search_term}'),
            parentalStatusViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/parentalStatusViews/{ad_group_id}~{criterion_id}'),
            paymentsAccountPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/paymentsAccounts/{payments_account_id}'),
            perStoreViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/perStoreViews/{place_id}'),
            performanceMaxPlacementViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/performanceMaxPlacementViews/{base_64_placement}'),
            productCategoryConstantPathTemplate: new this._gaxModule.PathTemplate('productCategoryConstants/{level}~{category_id}'),
            productGroupViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/productGroupViews/{adgroup_id}~{criterion_id}'),
            productLinkPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/productLinks/{product_link_id}'),
            productLinkInvitationPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/productLinkInvitations/{customer_invitation_id}'),
            qualifyingQuestionPathTemplate: new this._gaxModule.PathTemplate('qualifyingQuestions/{qualifying_question_id}'),
            recommendationPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/recommendations/{recommendation_id}'),
            recommendationSubscriptionPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/recommendationSubscriptions/{recommendation_type}'),
            remarketingActionPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/remarketingActions/{remarketing_action_id}'),
            searchTermViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/searchTermViews/{campaign_id}~{ad_group_id}~{query}'),
            sharedCriterionPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/sharedCriteria/{shared_set_id}~{criterion_id}'),
            sharedSetPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/sharedSets/{shared_set_id}'),
            shoppingPerformanceViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/shoppingPerformanceView'),
            shoppingProductPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/shoppingProducts/{merchant_center_id}~{channel}~{language_code}~{feed_label}~{item_id}'),
            smartCampaignSearchTermViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/smartCampaignSearchTermViews/{campaign_id}~{query}'),
            smartCampaignSettingPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/smartCampaignSettings/{campaign_id}'),
            thirdPartyAppAnalyticsLinkPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/thirdPartyAppAnalyticsLinks/{customer_link_id}'),
            topicConstantPathTemplate: new this._gaxModule.PathTemplate('topicConstants/{topic_id}'),
            topicViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/topicViews/{ad_group_id}~{criterion_id}'),
            travelActivityGroupViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/travelActivityGroupViews/{ad_group_id}~{criterion_id}'),
            travelActivityPerformanceViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/travelActivityPerformanceViews'),
            userInterestPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/userInterests/{user_interest_id}'),
            userListPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/userLists/{user_list_id}'),
            userListCustomerTypePathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/userListCustomerTypes/{user_list_id}~{semantic_label}'),
            userLocationViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/userLocationViews/{country_criterion_id}~{is_targeting_location}'),
            videoPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/videos/{video_id}'),
            webpageViewPathTemplate: new this._gaxModule.PathTemplate('customers/{customer_id}/webpageViews/{ad_group_id}~{criterion_id}'),
        };
        // Put together the default options sent with requests.
        this._defaults = this._gaxGrpc.constructSettings('google.ads.googleads.v21.services.AudienceService', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });
        // Set up a dictionary of "inner API calls"; the core implementation
        // of calling the API is handled in `google-gax`, with this code
        // merely providing the destination and request information.
        this.innerApiCalls = {};
        // Add a warn function to the client constructor so it can be easily tested.
        this.warn = this._gaxModule.warn;
    }
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize() {
        // If the client stub promise is already initialized, return immediately.
        if (this.audienceServiceStub) {
            return this.audienceServiceStub;
        }
        // Put together the "service stub" for
        // google.ads.googleads.v21.services.AudienceService.
        this.audienceServiceStub = this._gaxGrpc.createStub(this._opts.fallback ?
            this._protos.lookupService('google.ads.googleads.v21.services.AudienceService') :
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            this._protos.google.ads.googleads.v21.services.AudienceService, this._opts, this._providedCustomServicePath);
        // Iterate over each of the methods that the service provides
        // and create an API call method for each.
        const audienceServiceStubMethods = ['mutateAudiences'];
        for (const methodName of audienceServiceStubMethods) {
            const callPromise = this.audienceServiceStub.then(stub => (...args) => {
                if (this._terminated) {
                    return Promise.reject('The client has already been closed.');
                }
                const func = stub[methodName];
                return func.apply(stub, args);
            }, (err) => () => {
                throw err;
            });
            const descriptor = undefined;
            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);
            this.innerApiCalls[methodName] = apiCall;
        }
        return this.audienceServiceStub;
    }
    /**
     * The DNS address for this API service.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath() {
        if (typeof process === 'object' && typeof process.emitWarning === 'function') {
            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');
        }
        return 'googleads.googleapis.com';
    }
    /**
     * The DNS address for this API service - same as servicePath.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint() {
        if (typeof process === 'object' && typeof process.emitWarning === 'function') {
            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');
        }
        return 'googleads.googleapis.com';
    }
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    get apiEndpoint() {
        return this._servicePath;
    }
    get universeDomain() {
        return this._universeDomain;
    }
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port() {
        return 443;
    }
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes() {
        return [
            'https://www.googleapis.com/auth/adwords'
        ];
    }
    /**
     * Return the project ID used by this class.
     * @returns {Promise} A promise that resolves to string containing the project ID.
     */
    getProjectId(callback) {
        if (callback) {
            this.auth.getProjectId(callback);
            return;
        }
        return this.auth.getProjectId();
    }
    mutateAudiences(request, optionsOrCallback, callback) {
        request = request || {};
        let options;
        if (typeof optionsOrCallback === 'function' && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        }
        else {
            options = optionsOrCallback;
        }
        options = options || {};
        options.otherArgs = options.otherArgs || {};
        options.otherArgs.headers = options.otherArgs.headers || {};
        options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({
            'customer_id': request.customer_id ?? '',
        });
        this.initialize().catch(err => { throw err; });
        this._log.info('mutateAudiences request %j', request);
        const wrappedCallback = callback
            ? (error, response, options, rawResponse) => {
                this._log.info('mutateAudiences response %j', response);
                callback(error, response, options, rawResponse); // We verified callback above.
            }
            : undefined;
        return this.innerApiCalls.mutateAudiences(request, options, wrappedCallback)
            ?.then(([response, options, rawResponse]) => {
            this._log.info('mutateAudiences response %j', response);
            return [response, options, rawResponse];
        }).catch((error) => {
            if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
                const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
                error.statusDetails = (0, google_gax_1.decodeAnyProtosInArray)(error.statusDetails, protos);
            }
            throw error;
        });
    }
    // --------------------
    // -- Path templates --
    // --------------------
    /**
     * Return a fully-qualified accessibleBiddingStrategy resource name string.
     *
     * @param {string} customer_id
     * @param {string} bidding_strategy_id
     * @returns {string} Resource name string.
     */
    accessibleBiddingStrategyPath(customerId, biddingStrategyId) {
        return this.pathTemplates.accessibleBiddingStrategyPathTemplate.render({
            customer_id: customerId,
            bidding_strategy_id: biddingStrategyId,
        });
    }
    /**
     * Parse the customer_id from AccessibleBiddingStrategy resource.
     *
     * @param {string} accessibleBiddingStrategyName
     *   A fully-qualified path representing AccessibleBiddingStrategy resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAccessibleBiddingStrategyName(accessibleBiddingStrategyName) {
        return this.pathTemplates.accessibleBiddingStrategyPathTemplate.match(accessibleBiddingStrategyName).customer_id;
    }
    /**
     * Parse the bidding_strategy_id from AccessibleBiddingStrategy resource.
     *
     * @param {string} accessibleBiddingStrategyName
     *   A fully-qualified path representing AccessibleBiddingStrategy resource.
     * @returns {string} A string representing the bidding_strategy_id.
     */
    matchBiddingStrategyIdFromAccessibleBiddingStrategyName(accessibleBiddingStrategyName) {
        return this.pathTemplates.accessibleBiddingStrategyPathTemplate.match(accessibleBiddingStrategyName).bidding_strategy_id;
    }
    /**
     * Return a fully-qualified accountBudget resource name string.
     *
     * @param {string} customer_id
     * @param {string} account_budget_id
     * @returns {string} Resource name string.
     */
    accountBudgetPath(customerId, accountBudgetId) {
        return this.pathTemplates.accountBudgetPathTemplate.render({
            customer_id: customerId,
            account_budget_id: accountBudgetId,
        });
    }
    /**
     * Parse the customer_id from AccountBudget resource.
     *
     * @param {string} accountBudgetName
     *   A fully-qualified path representing AccountBudget resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAccountBudgetName(accountBudgetName) {
        return this.pathTemplates.accountBudgetPathTemplate.match(accountBudgetName).customer_id;
    }
    /**
     * Parse the account_budget_id from AccountBudget resource.
     *
     * @param {string} accountBudgetName
     *   A fully-qualified path representing AccountBudget resource.
     * @returns {string} A string representing the account_budget_id.
     */
    matchAccountBudgetIdFromAccountBudgetName(accountBudgetName) {
        return this.pathTemplates.accountBudgetPathTemplate.match(accountBudgetName).account_budget_id;
    }
    /**
     * Return a fully-qualified accountBudgetProposal resource name string.
     *
     * @param {string} customer_id
     * @param {string} account_budget_proposal_id
     * @returns {string} Resource name string.
     */
    accountBudgetProposalPath(customerId, accountBudgetProposalId) {
        return this.pathTemplates.accountBudgetProposalPathTemplate.render({
            customer_id: customerId,
            account_budget_proposal_id: accountBudgetProposalId,
        });
    }
    /**
     * Parse the customer_id from AccountBudgetProposal resource.
     *
     * @param {string} accountBudgetProposalName
     *   A fully-qualified path representing AccountBudgetProposal resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAccountBudgetProposalName(accountBudgetProposalName) {
        return this.pathTemplates.accountBudgetProposalPathTemplate.match(accountBudgetProposalName).customer_id;
    }
    /**
     * Parse the account_budget_proposal_id from AccountBudgetProposal resource.
     *
     * @param {string} accountBudgetProposalName
     *   A fully-qualified path representing AccountBudgetProposal resource.
     * @returns {string} A string representing the account_budget_proposal_id.
     */
    matchAccountBudgetProposalIdFromAccountBudgetProposalName(accountBudgetProposalName) {
        return this.pathTemplates.accountBudgetProposalPathTemplate.match(accountBudgetProposalName).account_budget_proposal_id;
    }
    /**
     * Return a fully-qualified accountLink resource name string.
     *
     * @param {string} customer_id
     * @param {string} account_link_id
     * @returns {string} Resource name string.
     */
    accountLinkPath(customerId, accountLinkId) {
        return this.pathTemplates.accountLinkPathTemplate.render({
            customer_id: customerId,
            account_link_id: accountLinkId,
        });
    }
    /**
     * Parse the customer_id from AccountLink resource.
     *
     * @param {string} accountLinkName
     *   A fully-qualified path representing AccountLink resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAccountLinkName(accountLinkName) {
        return this.pathTemplates.accountLinkPathTemplate.match(accountLinkName).customer_id;
    }
    /**
     * Parse the account_link_id from AccountLink resource.
     *
     * @param {string} accountLinkName
     *   A fully-qualified path representing AccountLink resource.
     * @returns {string} A string representing the account_link_id.
     */
    matchAccountLinkIdFromAccountLinkName(accountLinkName) {
        return this.pathTemplates.accountLinkPathTemplate.match(accountLinkName).account_link_id;
    }
    /**
     * Return a fully-qualified ad resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_id
     * @returns {string} Resource name string.
     */
    adPath(customerId, adId) {
        return this.pathTemplates.adPathTemplate.render({
            customer_id: customerId,
            ad_id: adId,
        });
    }
    /**
     * Parse the customer_id from Ad resource.
     *
     * @param {string} adName
     *   A fully-qualified path representing Ad resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdName(adName) {
        return this.pathTemplates.adPathTemplate.match(adName).customer_id;
    }
    /**
     * Parse the ad_id from Ad resource.
     *
     * @param {string} adName
     *   A fully-qualified path representing Ad resource.
     * @returns {string} A string representing the ad_id.
     */
    matchAdIdFromAdName(adName) {
        return this.pathTemplates.adPathTemplate.match(adName).ad_id;
    }
    /**
     * Return a fully-qualified adGroup resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @returns {string} Resource name string.
     */
    adGroupPath(customerId, adGroupId) {
        return this.pathTemplates.adGroupPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
        });
    }
    /**
     * Parse the customer_id from AdGroup resource.
     *
     * @param {string} adGroupName
     *   A fully-qualified path representing AdGroup resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupName(adGroupName) {
        return this.pathTemplates.adGroupPathTemplate.match(adGroupName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroup resource.
     *
     * @param {string} adGroupName
     *   A fully-qualified path representing AdGroup resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupName(adGroupName) {
        return this.pathTemplates.adGroupPathTemplate.match(adGroupName).ad_group_id;
    }
    /**
     * Return a fully-qualified adGroupAd resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} ad_id
     * @returns {string} Resource name string.
     */
    adGroupAdPath(customerId, adGroupId, adId) {
        return this.pathTemplates.adGroupAdPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            ad_id: adId,
        });
    }
    /**
     * Parse the customer_id from AdGroupAd resource.
     *
     * @param {string} adGroupAdName
     *   A fully-qualified path representing AdGroupAd resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupAdName(adGroupAdName) {
        return this.pathTemplates.adGroupAdPathTemplate.match(adGroupAdName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupAd resource.
     *
     * @param {string} adGroupAdName
     *   A fully-qualified path representing AdGroupAd resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupAdName(adGroupAdName) {
        return this.pathTemplates.adGroupAdPathTemplate.match(adGroupAdName).ad_group_id;
    }
    /**
     * Parse the ad_id from AdGroupAd resource.
     *
     * @param {string} adGroupAdName
     *   A fully-qualified path representing AdGroupAd resource.
     * @returns {string} A string representing the ad_id.
     */
    matchAdIdFromAdGroupAdName(adGroupAdName) {
        return this.pathTemplates.adGroupAdPathTemplate.match(adGroupAdName).ad_id;
    }
    /**
     * Return a fully-qualified adGroupAdAssetCombinationView resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} ad_id
     * @param {string} asset_combination_id_low
     * @param {string} asset_combination_id_high
     * @returns {string} Resource name string.
     */
    adGroupAdAssetCombinationViewPath(customerId, adGroupId, adId, assetCombinationIdLow, assetCombinationIdHigh) {
        return this.pathTemplates.adGroupAdAssetCombinationViewPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            ad_id: adId,
            asset_combination_id_low: assetCombinationIdLow,
            asset_combination_id_high: assetCombinationIdHigh,
        });
    }
    /**
     * Parse the customer_id from AdGroupAdAssetCombinationView resource.
     *
     * @param {string} adGroupAdAssetCombinationViewName
     *   A fully-qualified path representing AdGroupAdAssetCombinationView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupAdAssetCombinationViewName(adGroupAdAssetCombinationViewName) {
        return this.pathTemplates.adGroupAdAssetCombinationViewPathTemplate.match(adGroupAdAssetCombinationViewName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupAdAssetCombinationView resource.
     *
     * @param {string} adGroupAdAssetCombinationViewName
     *   A fully-qualified path representing AdGroupAdAssetCombinationView resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupAdAssetCombinationViewName(adGroupAdAssetCombinationViewName) {
        return this.pathTemplates.adGroupAdAssetCombinationViewPathTemplate.match(adGroupAdAssetCombinationViewName).ad_group_id;
    }
    /**
     * Parse the ad_id from AdGroupAdAssetCombinationView resource.
     *
     * @param {string} adGroupAdAssetCombinationViewName
     *   A fully-qualified path representing AdGroupAdAssetCombinationView resource.
     * @returns {string} A string representing the ad_id.
     */
    matchAdIdFromAdGroupAdAssetCombinationViewName(adGroupAdAssetCombinationViewName) {
        return this.pathTemplates.adGroupAdAssetCombinationViewPathTemplate.match(adGroupAdAssetCombinationViewName).ad_id;
    }
    /**
     * Parse the asset_combination_id_low from AdGroupAdAssetCombinationView resource.
     *
     * @param {string} adGroupAdAssetCombinationViewName
     *   A fully-qualified path representing AdGroupAdAssetCombinationView resource.
     * @returns {string} A string representing the asset_combination_id_low.
     */
    matchAssetCombinationIdLowFromAdGroupAdAssetCombinationViewName(adGroupAdAssetCombinationViewName) {
        return this.pathTemplates.adGroupAdAssetCombinationViewPathTemplate.match(adGroupAdAssetCombinationViewName).asset_combination_id_low;
    }
    /**
     * Parse the asset_combination_id_high from AdGroupAdAssetCombinationView resource.
     *
     * @param {string} adGroupAdAssetCombinationViewName
     *   A fully-qualified path representing AdGroupAdAssetCombinationView resource.
     * @returns {string} A string representing the asset_combination_id_high.
     */
    matchAssetCombinationIdHighFromAdGroupAdAssetCombinationViewName(adGroupAdAssetCombinationViewName) {
        return this.pathTemplates.adGroupAdAssetCombinationViewPathTemplate.match(adGroupAdAssetCombinationViewName).asset_combination_id_high;
    }
    /**
     * Return a fully-qualified adGroupAdAssetView resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} ad_id
     * @param {string} asset_id
     * @param {string} field_type
     * @returns {string} Resource name string.
     */
    adGroupAdAssetViewPath(customerId, adGroupId, adId, assetId, fieldType) {
        return this.pathTemplates.adGroupAdAssetViewPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            ad_id: adId,
            asset_id: assetId,
            field_type: fieldType,
        });
    }
    /**
     * Parse the customer_id from AdGroupAdAssetView resource.
     *
     * @param {string} adGroupAdAssetViewName
     *   A fully-qualified path representing AdGroupAdAssetView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupAdAssetViewName(adGroupAdAssetViewName) {
        return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupAdAssetView resource.
     *
     * @param {string} adGroupAdAssetViewName
     *   A fully-qualified path representing AdGroupAdAssetView resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupAdAssetViewName(adGroupAdAssetViewName) {
        return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).ad_group_id;
    }
    /**
     * Parse the ad_id from AdGroupAdAssetView resource.
     *
     * @param {string} adGroupAdAssetViewName
     *   A fully-qualified path representing AdGroupAdAssetView resource.
     * @returns {string} A string representing the ad_id.
     */
    matchAdIdFromAdGroupAdAssetViewName(adGroupAdAssetViewName) {
        return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).ad_id;
    }
    /**
     * Parse the asset_id from AdGroupAdAssetView resource.
     *
     * @param {string} adGroupAdAssetViewName
     *   A fully-qualified path representing AdGroupAdAssetView resource.
     * @returns {string} A string representing the asset_id.
     */
    matchAssetIdFromAdGroupAdAssetViewName(adGroupAdAssetViewName) {
        return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).asset_id;
    }
    /**
     * Parse the field_type from AdGroupAdAssetView resource.
     *
     * @param {string} adGroupAdAssetViewName
     *   A fully-qualified path representing AdGroupAdAssetView resource.
     * @returns {string} A string representing the field_type.
     */
    matchFieldTypeFromAdGroupAdAssetViewName(adGroupAdAssetViewName) {
        return this.pathTemplates.adGroupAdAssetViewPathTemplate.match(adGroupAdAssetViewName).field_type;
    }
    /**
     * Return a fully-qualified adGroupAdLabel resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} ad_id
     * @param {string} label_id
     * @returns {string} Resource name string.
     */
    adGroupAdLabelPath(customerId, adGroupId, adId, labelId) {
        return this.pathTemplates.adGroupAdLabelPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            ad_id: adId,
            label_id: labelId,
        });
    }
    /**
     * Parse the customer_id from AdGroupAdLabel resource.
     *
     * @param {string} adGroupAdLabelName
     *   A fully-qualified path representing AdGroupAdLabel resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupAdLabelName(adGroupAdLabelName) {
        return this.pathTemplates.adGroupAdLabelPathTemplate.match(adGroupAdLabelName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupAdLabel resource.
     *
     * @param {string} adGroupAdLabelName
     *   A fully-qualified path representing AdGroupAdLabel resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupAdLabelName(adGroupAdLabelName) {
        return this.pathTemplates.adGroupAdLabelPathTemplate.match(adGroupAdLabelName).ad_group_id;
    }
    /**
     * Parse the ad_id from AdGroupAdLabel resource.
     *
     * @param {string} adGroupAdLabelName
     *   A fully-qualified path representing AdGroupAdLabel resource.
     * @returns {string} A string representing the ad_id.
     */
    matchAdIdFromAdGroupAdLabelName(adGroupAdLabelName) {
        return this.pathTemplates.adGroupAdLabelPathTemplate.match(adGroupAdLabelName).ad_id;
    }
    /**
     * Parse the label_id from AdGroupAdLabel resource.
     *
     * @param {string} adGroupAdLabelName
     *   A fully-qualified path representing AdGroupAdLabel resource.
     * @returns {string} A string representing the label_id.
     */
    matchLabelIdFromAdGroupAdLabelName(adGroupAdLabelName) {
        return this.pathTemplates.adGroupAdLabelPathTemplate.match(adGroupAdLabelName).label_id;
    }
    /**
     * Return a fully-qualified adGroupAsset resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} asset_id
     * @param {string} field_type
     * @returns {string} Resource name string.
     */
    adGroupAssetPath(customerId, adGroupId, assetId, fieldType) {
        return this.pathTemplates.adGroupAssetPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            asset_id: assetId,
            field_type: fieldType,
        });
    }
    /**
     * Parse the customer_id from AdGroupAsset resource.
     *
     * @param {string} adGroupAssetName
     *   A fully-qualified path representing AdGroupAsset resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupAssetName(adGroupAssetName) {
        return this.pathTemplates.adGroupAssetPathTemplate.match(adGroupAssetName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupAsset resource.
     *
     * @param {string} adGroupAssetName
     *   A fully-qualified path representing AdGroupAsset resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupAssetName(adGroupAssetName) {
        return this.pathTemplates.adGroupAssetPathTemplate.match(adGroupAssetName).ad_group_id;
    }
    /**
     * Parse the asset_id from AdGroupAsset resource.
     *
     * @param {string} adGroupAssetName
     *   A fully-qualified path representing AdGroupAsset resource.
     * @returns {string} A string representing the asset_id.
     */
    matchAssetIdFromAdGroupAssetName(adGroupAssetName) {
        return this.pathTemplates.adGroupAssetPathTemplate.match(adGroupAssetName).asset_id;
    }
    /**
     * Parse the field_type from AdGroupAsset resource.
     *
     * @param {string} adGroupAssetName
     *   A fully-qualified path representing AdGroupAsset resource.
     * @returns {string} A string representing the field_type.
     */
    matchFieldTypeFromAdGroupAssetName(adGroupAssetName) {
        return this.pathTemplates.adGroupAssetPathTemplate.match(adGroupAssetName).field_type;
    }
    /**
     * Return a fully-qualified adGroupAssetSet resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} asset_set_id
     * @returns {string} Resource name string.
     */
    adGroupAssetSetPath(customerId, adGroupId, assetSetId) {
        return this.pathTemplates.adGroupAssetSetPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            asset_set_id: assetSetId,
        });
    }
    /**
     * Parse the customer_id from AdGroupAssetSet resource.
     *
     * @param {string} adGroupAssetSetName
     *   A fully-qualified path representing AdGroupAssetSet resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupAssetSetName(adGroupAssetSetName) {
        return this.pathTemplates.adGroupAssetSetPathTemplate.match(adGroupAssetSetName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupAssetSet resource.
     *
     * @param {string} adGroupAssetSetName
     *   A fully-qualified path representing AdGroupAssetSet resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupAssetSetName(adGroupAssetSetName) {
        return this.pathTemplates.adGroupAssetSetPathTemplate.match(adGroupAssetSetName).ad_group_id;
    }
    /**
     * Parse the asset_set_id from AdGroupAssetSet resource.
     *
     * @param {string} adGroupAssetSetName
     *   A fully-qualified path representing AdGroupAssetSet resource.
     * @returns {string} A string representing the asset_set_id.
     */
    matchAssetSetIdFromAdGroupAssetSetName(adGroupAssetSetName) {
        return this.pathTemplates.adGroupAssetSetPathTemplate.match(adGroupAssetSetName).asset_set_id;
    }
    /**
     * Return a fully-qualified adGroupAudienceView resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} criterion_id
     * @returns {string} Resource name string.
     */
    adGroupAudienceViewPath(customerId, adGroupId, criterionId) {
        return this.pathTemplates.adGroupAudienceViewPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            criterion_id: criterionId,
        });
    }
    /**
     * Parse the customer_id from AdGroupAudienceView resource.
     *
     * @param {string} adGroupAudienceViewName
     *   A fully-qualified path representing AdGroupAudienceView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupAudienceViewName(adGroupAudienceViewName) {
        return this.pathTemplates.adGroupAudienceViewPathTemplate.match(adGroupAudienceViewName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupAudienceView resource.
     *
     * @param {string} adGroupAudienceViewName
     *   A fully-qualified path representing AdGroupAudienceView resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupAudienceViewName(adGroupAudienceViewName) {
        return this.pathTemplates.adGroupAudienceViewPathTemplate.match(adGroupAudienceViewName).ad_group_id;
    }
    /**
     * Parse the criterion_id from AdGroupAudienceView resource.
     *
     * @param {string} adGroupAudienceViewName
     *   A fully-qualified path representing AdGroupAudienceView resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAdGroupAudienceViewName(adGroupAudienceViewName) {
        return this.pathTemplates.adGroupAudienceViewPathTemplate.match(adGroupAudienceViewName).criterion_id;
    }
    /**
     * Return a fully-qualified adGroupBidModifier resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} criterion_id
     * @returns {string} Resource name string.
     */
    adGroupBidModifierPath(customerId, adGroupId, criterionId) {
        return this.pathTemplates.adGroupBidModifierPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            criterion_id: criterionId,
        });
    }
    /**
     * Parse the customer_id from AdGroupBidModifier resource.
     *
     * @param {string} adGroupBidModifierName
     *   A fully-qualified path representing AdGroupBidModifier resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupBidModifierName(adGroupBidModifierName) {
        return this.pathTemplates.adGroupBidModifierPathTemplate.match(adGroupBidModifierName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupBidModifier resource.
     *
     * @param {string} adGroupBidModifierName
     *   A fully-qualified path representing AdGroupBidModifier resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupBidModifierName(adGroupBidModifierName) {
        return this.pathTemplates.adGroupBidModifierPathTemplate.match(adGroupBidModifierName).ad_group_id;
    }
    /**
     * Parse the criterion_id from AdGroupBidModifier resource.
     *
     * @param {string} adGroupBidModifierName
     *   A fully-qualified path representing AdGroupBidModifier resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAdGroupBidModifierName(adGroupBidModifierName) {
        return this.pathTemplates.adGroupBidModifierPathTemplate.match(adGroupBidModifierName).criterion_id;
    }
    /**
     * Return a fully-qualified adGroupCriterion resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} criterion_id
     * @returns {string} Resource name string.
     */
    adGroupCriterionPath(customerId, adGroupId, criterionId) {
        return this.pathTemplates.adGroupCriterionPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            criterion_id: criterionId,
        });
    }
    /**
     * Parse the customer_id from AdGroupCriterion resource.
     *
     * @param {string} adGroupCriterionName
     *   A fully-qualified path representing AdGroupCriterion resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupCriterionName(adGroupCriterionName) {
        return this.pathTemplates.adGroupCriterionPathTemplate.match(adGroupCriterionName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupCriterion resource.
     *
     * @param {string} adGroupCriterionName
     *   A fully-qualified path representing AdGroupCriterion resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupCriterionName(adGroupCriterionName) {
        return this.pathTemplates.adGroupCriterionPathTemplate.match(adGroupCriterionName).ad_group_id;
    }
    /**
     * Parse the criterion_id from AdGroupCriterion resource.
     *
     * @param {string} adGroupCriterionName
     *   A fully-qualified path representing AdGroupCriterion resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAdGroupCriterionName(adGroupCriterionName) {
        return this.pathTemplates.adGroupCriterionPathTemplate.match(adGroupCriterionName).criterion_id;
    }
    /**
     * Return a fully-qualified adGroupCriterionCustomizer resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} criterion_id
     * @param {string} customizer_attribute_id
     * @returns {string} Resource name string.
     */
    adGroupCriterionCustomizerPath(customerId, adGroupId, criterionId, customizerAttributeId) {
        return this.pathTemplates.adGroupCriterionCustomizerPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            criterion_id: criterionId,
            customizer_attribute_id: customizerAttributeId,
        });
    }
    /**
     * Parse the customer_id from AdGroupCriterionCustomizer resource.
     *
     * @param {string} adGroupCriterionCustomizerName
     *   A fully-qualified path representing AdGroupCriterionCustomizer resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupCriterionCustomizerName(adGroupCriterionCustomizerName) {
        return this.pathTemplates.adGroupCriterionCustomizerPathTemplate.match(adGroupCriterionCustomizerName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupCriterionCustomizer resource.
     *
     * @param {string} adGroupCriterionCustomizerName
     *   A fully-qualified path representing AdGroupCriterionCustomizer resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupCriterionCustomizerName(adGroupCriterionCustomizerName) {
        return this.pathTemplates.adGroupCriterionCustomizerPathTemplate.match(adGroupCriterionCustomizerName).ad_group_id;
    }
    /**
     * Parse the criterion_id from AdGroupCriterionCustomizer resource.
     *
     * @param {string} adGroupCriterionCustomizerName
     *   A fully-qualified path representing AdGroupCriterionCustomizer resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAdGroupCriterionCustomizerName(adGroupCriterionCustomizerName) {
        return this.pathTemplates.adGroupCriterionCustomizerPathTemplate.match(adGroupCriterionCustomizerName).criterion_id;
    }
    /**
     * Parse the customizer_attribute_id from AdGroupCriterionCustomizer resource.
     *
     * @param {string} adGroupCriterionCustomizerName
     *   A fully-qualified path representing AdGroupCriterionCustomizer resource.
     * @returns {string} A string representing the customizer_attribute_id.
     */
    matchCustomizerAttributeIdFromAdGroupCriterionCustomizerName(adGroupCriterionCustomizerName) {
        return this.pathTemplates.adGroupCriterionCustomizerPathTemplate.match(adGroupCriterionCustomizerName).customizer_attribute_id;
    }
    /**
     * Return a fully-qualified adGroupCriterionLabel resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} criterion_id
     * @param {string} label_id
     * @returns {string} Resource name string.
     */
    adGroupCriterionLabelPath(customerId, adGroupId, criterionId, labelId) {
        return this.pathTemplates.adGroupCriterionLabelPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            criterion_id: criterionId,
            label_id: labelId,
        });
    }
    /**
     * Parse the customer_id from AdGroupCriterionLabel resource.
     *
     * @param {string} adGroupCriterionLabelName
     *   A fully-qualified path representing AdGroupCriterionLabel resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupCriterionLabelName(adGroupCriterionLabelName) {
        return this.pathTemplates.adGroupCriterionLabelPathTemplate.match(adGroupCriterionLabelName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupCriterionLabel resource.
     *
     * @param {string} adGroupCriterionLabelName
     *   A fully-qualified path representing AdGroupCriterionLabel resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupCriterionLabelName(adGroupCriterionLabelName) {
        return this.pathTemplates.adGroupCriterionLabelPathTemplate.match(adGroupCriterionLabelName).ad_group_id;
    }
    /**
     * Parse the criterion_id from AdGroupCriterionLabel resource.
     *
     * @param {string} adGroupCriterionLabelName
     *   A fully-qualified path representing AdGroupCriterionLabel resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAdGroupCriterionLabelName(adGroupCriterionLabelName) {
        return this.pathTemplates.adGroupCriterionLabelPathTemplate.match(adGroupCriterionLabelName).criterion_id;
    }
    /**
     * Parse the label_id from AdGroupCriterionLabel resource.
     *
     * @param {string} adGroupCriterionLabelName
     *   A fully-qualified path representing AdGroupCriterionLabel resource.
     * @returns {string} A string representing the label_id.
     */
    matchLabelIdFromAdGroupCriterionLabelName(adGroupCriterionLabelName) {
        return this.pathTemplates.adGroupCriterionLabelPathTemplate.match(adGroupCriterionLabelName).label_id;
    }
    /**
     * Return a fully-qualified adGroupCriterionSimulation resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} criterion_id
     * @param {string} type
     * @param {string} modification_method
     * @param {string} start_date
     * @param {string} end_date
     * @returns {string} Resource name string.
     */
    adGroupCriterionSimulationPath(customerId, adGroupId, criterionId, type, modificationMethod, startDate, endDate) {
        return this.pathTemplates.adGroupCriterionSimulationPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            criterion_id: criterionId,
            type: type,
            modification_method: modificationMethod,
            start_date: startDate,
            end_date: endDate,
        });
    }
    /**
     * Parse the customer_id from AdGroupCriterionSimulation resource.
     *
     * @param {string} adGroupCriterionSimulationName
     *   A fully-qualified path representing AdGroupCriterionSimulation resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName) {
        return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupCriterionSimulation resource.
     *
     * @param {string} adGroupCriterionSimulationName
     *   A fully-qualified path representing AdGroupCriterionSimulation resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName) {
        return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).ad_group_id;
    }
    /**
     * Parse the criterion_id from AdGroupCriterionSimulation resource.
     *
     * @param {string} adGroupCriterionSimulationName
     *   A fully-qualified path representing AdGroupCriterionSimulation resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName) {
        return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).criterion_id;
    }
    /**
     * Parse the type from AdGroupCriterionSimulation resource.
     *
     * @param {string} adGroupCriterionSimulationName
     *   A fully-qualified path representing AdGroupCriterionSimulation resource.
     * @returns {string} A string representing the type.
     */
    matchTypeFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName) {
        return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).type;
    }
    /**
     * Parse the modification_method from AdGroupCriterionSimulation resource.
     *
     * @param {string} adGroupCriterionSimulationName
     *   A fully-qualified path representing AdGroupCriterionSimulation resource.
     * @returns {string} A string representing the modification_method.
     */
    matchModificationMethodFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName) {
        return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).modification_method;
    }
    /**
     * Parse the start_date from AdGroupCriterionSimulation resource.
     *
     * @param {string} adGroupCriterionSimulationName
     *   A fully-qualified path representing AdGroupCriterionSimulation resource.
     * @returns {string} A string representing the start_date.
     */
    matchStartDateFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName) {
        return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).start_date;
    }
    /**
     * Parse the end_date from AdGroupCriterionSimulation resource.
     *
     * @param {string} adGroupCriterionSimulationName
     *   A fully-qualified path representing AdGroupCriterionSimulation resource.
     * @returns {string} A string representing the end_date.
     */
    matchEndDateFromAdGroupCriterionSimulationName(adGroupCriterionSimulationName) {
        return this.pathTemplates.adGroupCriterionSimulationPathTemplate.match(adGroupCriterionSimulationName).end_date;
    }
    /**
     * Return a fully-qualified adGroupCustomizer resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} customizer_attribute_id
     * @returns {string} Resource name string.
     */
    adGroupCustomizerPath(customerId, adGroupId, customizerAttributeId) {
        return this.pathTemplates.adGroupCustomizerPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            customizer_attribute_id: customizerAttributeId,
        });
    }
    /**
     * Parse the customer_id from AdGroupCustomizer resource.
     *
     * @param {string} adGroupCustomizerName
     *   A fully-qualified path representing AdGroupCustomizer resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupCustomizerName(adGroupCustomizerName) {
        return this.pathTemplates.adGroupCustomizerPathTemplate.match(adGroupCustomizerName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupCustomizer resource.
     *
     * @param {string} adGroupCustomizerName
     *   A fully-qualified path representing AdGroupCustomizer resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupCustomizerName(adGroupCustomizerName) {
        return this.pathTemplates.adGroupCustomizerPathTemplate.match(adGroupCustomizerName).ad_group_id;
    }
    /**
     * Parse the customizer_attribute_id from AdGroupCustomizer resource.
     *
     * @param {string} adGroupCustomizerName
     *   A fully-qualified path representing AdGroupCustomizer resource.
     * @returns {string} A string representing the customizer_attribute_id.
     */
    matchCustomizerAttributeIdFromAdGroupCustomizerName(adGroupCustomizerName) {
        return this.pathTemplates.adGroupCustomizerPathTemplate.match(adGroupCustomizerName).customizer_attribute_id;
    }
    /**
     * Return a fully-qualified adGroupLabel resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} label_id
     * @returns {string} Resource name string.
     */
    adGroupLabelPath(customerId, adGroupId, labelId) {
        return this.pathTemplates.adGroupLabelPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            label_id: labelId,
        });
    }
    /**
     * Parse the customer_id from AdGroupLabel resource.
     *
     * @param {string} adGroupLabelName
     *   A fully-qualified path representing AdGroupLabel resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupLabelName(adGroupLabelName) {
        return this.pathTemplates.adGroupLabelPathTemplate.match(adGroupLabelName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupLabel resource.
     *
     * @param {string} adGroupLabelName
     *   A fully-qualified path representing AdGroupLabel resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupLabelName(adGroupLabelName) {
        return this.pathTemplates.adGroupLabelPathTemplate.match(adGroupLabelName).ad_group_id;
    }
    /**
     * Parse the label_id from AdGroupLabel resource.
     *
     * @param {string} adGroupLabelName
     *   A fully-qualified path representing AdGroupLabel resource.
     * @returns {string} A string representing the label_id.
     */
    matchLabelIdFromAdGroupLabelName(adGroupLabelName) {
        return this.pathTemplates.adGroupLabelPathTemplate.match(adGroupLabelName).label_id;
    }
    /**
     * Return a fully-qualified adGroupSimulation resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} type
     * @param {string} modification_method
     * @param {string} start_date
     * @param {string} end_date
     * @returns {string} Resource name string.
     */
    adGroupSimulationPath(customerId, adGroupId, type, modificationMethod, startDate, endDate) {
        return this.pathTemplates.adGroupSimulationPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            type: type,
            modification_method: modificationMethod,
            start_date: startDate,
            end_date: endDate,
        });
    }
    /**
     * Parse the customer_id from AdGroupSimulation resource.
     *
     * @param {string} adGroupSimulationName
     *   A fully-qualified path representing AdGroupSimulation resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdGroupSimulationName(adGroupSimulationName) {
        return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdGroupSimulation resource.
     *
     * @param {string} adGroupSimulationName
     *   A fully-qualified path representing AdGroupSimulation resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdGroupSimulationName(adGroupSimulationName) {
        return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).ad_group_id;
    }
    /**
     * Parse the type from AdGroupSimulation resource.
     *
     * @param {string} adGroupSimulationName
     *   A fully-qualified path representing AdGroupSimulation resource.
     * @returns {string} A string representing the type.
     */
    matchTypeFromAdGroupSimulationName(adGroupSimulationName) {
        return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).type;
    }
    /**
     * Parse the modification_method from AdGroupSimulation resource.
     *
     * @param {string} adGroupSimulationName
     *   A fully-qualified path representing AdGroupSimulation resource.
     * @returns {string} A string representing the modification_method.
     */
    matchModificationMethodFromAdGroupSimulationName(adGroupSimulationName) {
        return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).modification_method;
    }
    /**
     * Parse the start_date from AdGroupSimulation resource.
     *
     * @param {string} adGroupSimulationName
     *   A fully-qualified path representing AdGroupSimulation resource.
     * @returns {string} A string representing the start_date.
     */
    matchStartDateFromAdGroupSimulationName(adGroupSimulationName) {
        return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).start_date;
    }
    /**
     * Parse the end_date from AdGroupSimulation resource.
     *
     * @param {string} adGroupSimulationName
     *   A fully-qualified path representing AdGroupSimulation resource.
     * @returns {string} A string representing the end_date.
     */
    matchEndDateFromAdGroupSimulationName(adGroupSimulationName) {
        return this.pathTemplates.adGroupSimulationPathTemplate.match(adGroupSimulationName).end_date;
    }
    /**
     * Return a fully-qualified adParameter resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} criterion_id
     * @param {string} parameter_index
     * @returns {string} Resource name string.
     */
    adParameterPath(customerId, adGroupId, criterionId, parameterIndex) {
        return this.pathTemplates.adParameterPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            criterion_id: criterionId,
            parameter_index: parameterIndex,
        });
    }
    /**
     * Parse the customer_id from AdParameter resource.
     *
     * @param {string} adParameterName
     *   A fully-qualified path representing AdParameter resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdParameterName(adParameterName) {
        return this.pathTemplates.adParameterPathTemplate.match(adParameterName).customer_id;
    }
    /**
     * Parse the ad_group_id from AdParameter resource.
     *
     * @param {string} adParameterName
     *   A fully-qualified path representing AdParameter resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAdParameterName(adParameterName) {
        return this.pathTemplates.adParameterPathTemplate.match(adParameterName).ad_group_id;
    }
    /**
     * Parse the criterion_id from AdParameter resource.
     *
     * @param {string} adParameterName
     *   A fully-qualified path representing AdParameter resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAdParameterName(adParameterName) {
        return this.pathTemplates.adParameterPathTemplate.match(adParameterName).criterion_id;
    }
    /**
     * Parse the parameter_index from AdParameter resource.
     *
     * @param {string} adParameterName
     *   A fully-qualified path representing AdParameter resource.
     * @returns {string} A string representing the parameter_index.
     */
    matchParameterIndexFromAdParameterName(adParameterName) {
        return this.pathTemplates.adParameterPathTemplate.match(adParameterName).parameter_index;
    }
    /**
     * Return a fully-qualified adScheduleView resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @param {string} criterion_id
     * @returns {string} Resource name string.
     */
    adScheduleViewPath(customerId, campaignId, criterionId) {
        return this.pathTemplates.adScheduleViewPathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
            criterion_id: criterionId,
        });
    }
    /**
     * Parse the customer_id from AdScheduleView resource.
     *
     * @param {string} adScheduleViewName
     *   A fully-qualified path representing AdScheduleView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAdScheduleViewName(adScheduleViewName) {
        return this.pathTemplates.adScheduleViewPathTemplate.match(adScheduleViewName).customer_id;
    }
    /**
     * Parse the campaign_id from AdScheduleView resource.
     *
     * @param {string} adScheduleViewName
     *   A fully-qualified path representing AdScheduleView resource.
     * @returns {string} A string representing the campaign_id.
     */
    matchCampaignIdFromAdScheduleViewName(adScheduleViewName) {
        return this.pathTemplates.adScheduleViewPathTemplate.match(adScheduleViewName).campaign_id;
    }
    /**
     * Parse the criterion_id from AdScheduleView resource.
     *
     * @param {string} adScheduleViewName
     *   A fully-qualified path representing AdScheduleView resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAdScheduleViewName(adScheduleViewName) {
        return this.pathTemplates.adScheduleViewPathTemplate.match(adScheduleViewName).criterion_id;
    }
    /**
     * Return a fully-qualified ageRangeView resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} criterion_id
     * @returns {string} Resource name string.
     */
    ageRangeViewPath(customerId, adGroupId, criterionId) {
        return this.pathTemplates.ageRangeViewPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            criterion_id: criterionId,
        });
    }
    /**
     * Parse the customer_id from AgeRangeView resource.
     *
     * @param {string} ageRangeViewName
     *   A fully-qualified path representing AgeRangeView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAgeRangeViewName(ageRangeViewName) {
        return this.pathTemplates.ageRangeViewPathTemplate.match(ageRangeViewName).customer_id;
    }
    /**
     * Parse the ad_group_id from AgeRangeView resource.
     *
     * @param {string} ageRangeViewName
     *   A fully-qualified path representing AgeRangeView resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAgeRangeViewName(ageRangeViewName) {
        return this.pathTemplates.ageRangeViewPathTemplate.match(ageRangeViewName).ad_group_id;
    }
    /**
     * Parse the criterion_id from AgeRangeView resource.
     *
     * @param {string} ageRangeViewName
     *   A fully-qualified path representing AgeRangeView resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAgeRangeViewName(ageRangeViewName) {
        return this.pathTemplates.ageRangeViewPathTemplate.match(ageRangeViewName).criterion_id;
    }
    /**
     * Return a fully-qualified aiMaxSearchTermAdCombinationView resource name string.
     *
     * @param {string} customer_id
     * @param {string} ad_group_id
     * @param {string} search_term
     * @param {string} landing_page
     * @param {string} headline
     * @returns {string} Resource name string.
     */
    aiMaxSearchTermAdCombinationViewPath(customerId, adGroupId, searchTerm, landingPage, headline) {
        return this.pathTemplates.aiMaxSearchTermAdCombinationViewPathTemplate.render({
            customer_id: customerId,
            ad_group_id: adGroupId,
            search_term: searchTerm,
            landing_page: landingPage,
            headline: headline,
        });
    }
    /**
     * Parse the customer_id from AiMaxSearchTermAdCombinationView resource.
     *
     * @param {string} aiMaxSearchTermAdCombinationViewName
     *   A fully-qualified path representing AiMaxSearchTermAdCombinationView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAiMaxSearchTermAdCombinationViewName(aiMaxSearchTermAdCombinationViewName) {
        return this.pathTemplates.aiMaxSearchTermAdCombinationViewPathTemplate.match(aiMaxSearchTermAdCombinationViewName).customer_id;
    }
    /**
     * Parse the ad_group_id from AiMaxSearchTermAdCombinationView resource.
     *
     * @param {string} aiMaxSearchTermAdCombinationViewName
     *   A fully-qualified path representing AiMaxSearchTermAdCombinationView resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAiMaxSearchTermAdCombinationViewName(aiMaxSearchTermAdCombinationViewName) {
        return this.pathTemplates.aiMaxSearchTermAdCombinationViewPathTemplate.match(aiMaxSearchTermAdCombinationViewName).ad_group_id;
    }
    /**
     * Parse the search_term from AiMaxSearchTermAdCombinationView resource.
     *
     * @param {string} aiMaxSearchTermAdCombinationViewName
     *   A fully-qualified path representing AiMaxSearchTermAdCombinationView resource.
     * @returns {string} A string representing the search_term.
     */
    matchSearchTermFromAiMaxSearchTermAdCombinationViewName(aiMaxSearchTermAdCombinationViewName) {
        return this.pathTemplates.aiMaxSearchTermAdCombinationViewPathTemplate.match(aiMaxSearchTermAdCombinationViewName).search_term;
    }
    /**
     * Parse the landing_page from AiMaxSearchTermAdCombinationView resource.
     *
     * @param {string} aiMaxSearchTermAdCombinationViewName
     *   A fully-qualified path representing AiMaxSearchTermAdCombinationView resource.
     * @returns {string} A string representing the landing_page.
     */
    matchLandingPageFromAiMaxSearchTermAdCombinationViewName(aiMaxSearchTermAdCombinationViewName) {
        return this.pathTemplates.aiMaxSearchTermAdCombinationViewPathTemplate.match(aiMaxSearchTermAdCombinationViewName).landing_page;
    }
    /**
     * Parse the headline from AiMaxSearchTermAdCombinationView resource.
     *
     * @param {string} aiMaxSearchTermAdCombinationViewName
     *   A fully-qualified path representing AiMaxSearchTermAdCombinationView resource.
     * @returns {string} A string representing the headline.
     */
    matchHeadlineFromAiMaxSearchTermAdCombinationViewName(aiMaxSearchTermAdCombinationViewName) {
        return this.pathTemplates.aiMaxSearchTermAdCombinationViewPathTemplate.match(aiMaxSearchTermAdCombinationViewName).headline;
    }
    /**
     * Return a fully-qualified androidPrivacySharedKeyGoogleAdGroup resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @param {string} ad_group_id
     * @param {string} android_privacy_interaction_type
     * @param {string} android_privacy_network_type
     * @param {string} android_privacy_interaction_date
     * @returns {string} Resource name string.
     */
    androidPrivacySharedKeyGoogleAdGroupPath(customerId, campaignId, adGroupId, androidPrivacyInteractionType, androidPrivacyNetworkType, androidPrivacyInteractionDate) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleAdGroupPathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
            ad_group_id: adGroupId,
            android_privacy_interaction_type: androidPrivacyInteractionType,
            android_privacy_network_type: androidPrivacyNetworkType,
            android_privacy_interaction_date: androidPrivacyInteractionDate,
        });
    }
    /**
     * Parse the customer_id from AndroidPrivacySharedKeyGoogleAdGroup resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleAdGroupName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleAdGroup resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAndroidPrivacySharedKeyGoogleAdGroupName(androidPrivacySharedKeyGoogleAdGroupName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleAdGroupPathTemplate.match(androidPrivacySharedKeyGoogleAdGroupName).customer_id;
    }
    /**
     * Parse the campaign_id from AndroidPrivacySharedKeyGoogleAdGroup resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleAdGroupName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleAdGroup resource.
     * @returns {string} A string representing the campaign_id.
     */
    matchCampaignIdFromAndroidPrivacySharedKeyGoogleAdGroupName(androidPrivacySharedKeyGoogleAdGroupName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleAdGroupPathTemplate.match(androidPrivacySharedKeyGoogleAdGroupName).campaign_id;
    }
    /**
     * Parse the ad_group_id from AndroidPrivacySharedKeyGoogleAdGroup resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleAdGroupName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleAdGroup resource.
     * @returns {string} A string representing the ad_group_id.
     */
    matchAdGroupIdFromAndroidPrivacySharedKeyGoogleAdGroupName(androidPrivacySharedKeyGoogleAdGroupName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleAdGroupPathTemplate.match(androidPrivacySharedKeyGoogleAdGroupName).ad_group_id;
    }
    /**
     * Parse the android_privacy_interaction_type from AndroidPrivacySharedKeyGoogleAdGroup resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleAdGroupName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleAdGroup resource.
     * @returns {string} A string representing the android_privacy_interaction_type.
     */
    matchAndroidPrivacyInteractionTypeFromAndroidPrivacySharedKeyGoogleAdGroupName(androidPrivacySharedKeyGoogleAdGroupName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleAdGroupPathTemplate.match(androidPrivacySharedKeyGoogleAdGroupName).android_privacy_interaction_type;
    }
    /**
     * Parse the android_privacy_network_type from AndroidPrivacySharedKeyGoogleAdGroup resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleAdGroupName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleAdGroup resource.
     * @returns {string} A string representing the android_privacy_network_type.
     */
    matchAndroidPrivacyNetworkTypeFromAndroidPrivacySharedKeyGoogleAdGroupName(androidPrivacySharedKeyGoogleAdGroupName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleAdGroupPathTemplate.match(androidPrivacySharedKeyGoogleAdGroupName).android_privacy_network_type;
    }
    /**
     * Parse the android_privacy_interaction_date from AndroidPrivacySharedKeyGoogleAdGroup resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleAdGroupName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleAdGroup resource.
     * @returns {string} A string representing the android_privacy_interaction_date.
     */
    matchAndroidPrivacyInteractionDateFromAndroidPrivacySharedKeyGoogleAdGroupName(androidPrivacySharedKeyGoogleAdGroupName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleAdGroupPathTemplate.match(androidPrivacySharedKeyGoogleAdGroupName).android_privacy_interaction_date;
    }
    /**
     * Return a fully-qualified androidPrivacySharedKeyGoogleCampaign resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @param {string} android_privacy_interaction_type
     * @param {string} android_privacy_interaction_date
     * @returns {string} Resource name string.
     */
    androidPrivacySharedKeyGoogleCampaignPath(customerId, campaignId, androidPrivacyInteractionType, androidPrivacyInteractionDate) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleCampaignPathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
            android_privacy_interaction_type: androidPrivacyInteractionType,
            android_privacy_interaction_date: androidPrivacyInteractionDate,
        });
    }
    /**
     * Parse the customer_id from AndroidPrivacySharedKeyGoogleCampaign resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleCampaignName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleCampaign resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAndroidPrivacySharedKeyGoogleCampaignName(androidPrivacySharedKeyGoogleCampaignName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleCampaignPathTemplate.match(androidPrivacySharedKeyGoogleCampaignName).customer_id;
    }
    /**
     * Parse the campaign_id from AndroidPrivacySharedKeyGoogleCampaign resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleCampaignName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleCampaign resource.
     * @returns {string} A string representing the campaign_id.
     */
    matchCampaignIdFromAndroidPrivacySharedKeyGoogleCampaignName(androidPrivacySharedKeyGoogleCampaignName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleCampaignPathTemplate.match(androidPrivacySharedKeyGoogleCampaignName).campaign_id;
    }
    /**
     * Parse the android_privacy_interaction_type from AndroidPrivacySharedKeyGoogleCampaign resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleCampaignName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleCampaign resource.
     * @returns {string} A string representing the android_privacy_interaction_type.
     */
    matchAndroidPrivacyInteractionTypeFromAndroidPrivacySharedKeyGoogleCampaignName(androidPrivacySharedKeyGoogleCampaignName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleCampaignPathTemplate.match(androidPrivacySharedKeyGoogleCampaignName).android_privacy_interaction_type;
    }
    /**
     * Parse the android_privacy_interaction_date from AndroidPrivacySharedKeyGoogleCampaign resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleCampaignName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleCampaign resource.
     * @returns {string} A string representing the android_privacy_interaction_date.
     */
    matchAndroidPrivacyInteractionDateFromAndroidPrivacySharedKeyGoogleCampaignName(androidPrivacySharedKeyGoogleCampaignName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleCampaignPathTemplate.match(androidPrivacySharedKeyGoogleCampaignName).android_privacy_interaction_date;
    }
    /**
     * Return a fully-qualified androidPrivacySharedKeyGoogleNetworkType resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @param {string} android_privacy_interaction_type
     * @param {string} android_privacy_network_type
     * @param {string} android_privacy_interaction_date
     * @returns {string} Resource name string.
     */
    androidPrivacySharedKeyGoogleNetworkTypePath(customerId, campaignId, androidPrivacyInteractionType, androidPrivacyNetworkType, androidPrivacyInteractionDate) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleNetworkTypePathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
            android_privacy_interaction_type: androidPrivacyInteractionType,
            android_privacy_network_type: androidPrivacyNetworkType,
            android_privacy_interaction_date: androidPrivacyInteractionDate,
        });
    }
    /**
     * Parse the customer_id from AndroidPrivacySharedKeyGoogleNetworkType resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleNetworkTypeName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleNetworkType resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAndroidPrivacySharedKeyGoogleNetworkTypeName(androidPrivacySharedKeyGoogleNetworkTypeName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleNetworkTypePathTemplate.match(androidPrivacySharedKeyGoogleNetworkTypeName).customer_id;
    }
    /**
     * Parse the campaign_id from AndroidPrivacySharedKeyGoogleNetworkType resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleNetworkTypeName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleNetworkType resource.
     * @returns {string} A string representing the campaign_id.
     */
    matchCampaignIdFromAndroidPrivacySharedKeyGoogleNetworkTypeName(androidPrivacySharedKeyGoogleNetworkTypeName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleNetworkTypePathTemplate.match(androidPrivacySharedKeyGoogleNetworkTypeName).campaign_id;
    }
    /**
     * Parse the android_privacy_interaction_type from AndroidPrivacySharedKeyGoogleNetworkType resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleNetworkTypeName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleNetworkType resource.
     * @returns {string} A string representing the android_privacy_interaction_type.
     */
    matchAndroidPrivacyInteractionTypeFromAndroidPrivacySharedKeyGoogleNetworkTypeName(androidPrivacySharedKeyGoogleNetworkTypeName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleNetworkTypePathTemplate.match(androidPrivacySharedKeyGoogleNetworkTypeName).android_privacy_interaction_type;
    }
    /**
     * Parse the android_privacy_network_type from AndroidPrivacySharedKeyGoogleNetworkType resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleNetworkTypeName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleNetworkType resource.
     * @returns {string} A string representing the android_privacy_network_type.
     */
    matchAndroidPrivacyNetworkTypeFromAndroidPrivacySharedKeyGoogleNetworkTypeName(androidPrivacySharedKeyGoogleNetworkTypeName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleNetworkTypePathTemplate.match(androidPrivacySharedKeyGoogleNetworkTypeName).android_privacy_network_type;
    }
    /**
     * Parse the android_privacy_interaction_date from AndroidPrivacySharedKeyGoogleNetworkType resource.
     *
     * @param {string} androidPrivacySharedKeyGoogleNetworkTypeName
     *   A fully-qualified path representing AndroidPrivacySharedKeyGoogleNetworkType resource.
     * @returns {string} A string representing the android_privacy_interaction_date.
     */
    matchAndroidPrivacyInteractionDateFromAndroidPrivacySharedKeyGoogleNetworkTypeName(androidPrivacySharedKeyGoogleNetworkTypeName) {
        return this.pathTemplates.androidPrivacySharedKeyGoogleNetworkTypePathTemplate.match(androidPrivacySharedKeyGoogleNetworkTypeName).android_privacy_interaction_date;
    }
    /**
     * Return a fully-qualified asset resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_id
     * @returns {string} Resource name string.
     */
    assetPath(customerId, assetId) {
        return this.pathTemplates.assetPathTemplate.render({
            customer_id: customerId,
            asset_id: assetId,
        });
    }
    /**
     * Parse the customer_id from Asset resource.
     *
     * @param {string} assetName
     *   A fully-qualified path representing Asset resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetName(assetName) {
        return this.pathTemplates.assetPathTemplate.match(assetName).customer_id;
    }
    /**
     * Parse the asset_id from Asset resource.
     *
     * @param {string} assetName
     *   A fully-qualified path representing Asset resource.
     * @returns {string} A string representing the asset_id.
     */
    matchAssetIdFromAssetName(assetName) {
        return this.pathTemplates.assetPathTemplate.match(assetName).asset_id;
    }
    /**
     * Return a fully-qualified assetFieldTypeView resource name string.
     *
     * @param {string} customer_id
     * @param {string} field_type
     * @returns {string} Resource name string.
     */
    assetFieldTypeViewPath(customerId, fieldType) {
        return this.pathTemplates.assetFieldTypeViewPathTemplate.render({
            customer_id: customerId,
            field_type: fieldType,
        });
    }
    /**
     * Parse the customer_id from AssetFieldTypeView resource.
     *
     * @param {string} assetFieldTypeViewName
     *   A fully-qualified path representing AssetFieldTypeView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetFieldTypeViewName(assetFieldTypeViewName) {
        return this.pathTemplates.assetFieldTypeViewPathTemplate.match(assetFieldTypeViewName).customer_id;
    }
    /**
     * Parse the field_type from AssetFieldTypeView resource.
     *
     * @param {string} assetFieldTypeViewName
     *   A fully-qualified path representing AssetFieldTypeView resource.
     * @returns {string} A string representing the field_type.
     */
    matchFieldTypeFromAssetFieldTypeViewName(assetFieldTypeViewName) {
        return this.pathTemplates.assetFieldTypeViewPathTemplate.match(assetFieldTypeViewName).field_type;
    }
    /**
     * Return a fully-qualified assetGroup resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_group_id
     * @returns {string} Resource name string.
     */
    assetGroupPath(customerId, assetGroupId) {
        return this.pathTemplates.assetGroupPathTemplate.render({
            customer_id: customerId,
            asset_group_id: assetGroupId,
        });
    }
    /**
     * Parse the customer_id from AssetGroup resource.
     *
     * @param {string} assetGroupName
     *   A fully-qualified path representing AssetGroup resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetGroupName(assetGroupName) {
        return this.pathTemplates.assetGroupPathTemplate.match(assetGroupName).customer_id;
    }
    /**
     * Parse the asset_group_id from AssetGroup resource.
     *
     * @param {string} assetGroupName
     *   A fully-qualified path representing AssetGroup resource.
     * @returns {string} A string representing the asset_group_id.
     */
    matchAssetGroupIdFromAssetGroupName(assetGroupName) {
        return this.pathTemplates.assetGroupPathTemplate.match(assetGroupName).asset_group_id;
    }
    /**
     * Return a fully-qualified assetGroupAsset resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_group_id
     * @param {string} asset_id
     * @param {string} field_type
     * @returns {string} Resource name string.
     */
    assetGroupAssetPath(customerId, assetGroupId, assetId, fieldType) {
        return this.pathTemplates.assetGroupAssetPathTemplate.render({
            customer_id: customerId,
            asset_group_id: assetGroupId,
            asset_id: assetId,
            field_type: fieldType,
        });
    }
    /**
     * Parse the customer_id from AssetGroupAsset resource.
     *
     * @param {string} assetGroupAssetName
     *   A fully-qualified path representing AssetGroupAsset resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetGroupAssetName(assetGroupAssetName) {
        return this.pathTemplates.assetGroupAssetPathTemplate.match(assetGroupAssetName).customer_id;
    }
    /**
     * Parse the asset_group_id from AssetGroupAsset resource.
     *
     * @param {string} assetGroupAssetName
     *   A fully-qualified path representing AssetGroupAsset resource.
     * @returns {string} A string representing the asset_group_id.
     */
    matchAssetGroupIdFromAssetGroupAssetName(assetGroupAssetName) {
        return this.pathTemplates.assetGroupAssetPathTemplate.match(assetGroupAssetName).asset_group_id;
    }
    /**
     * Parse the asset_id from AssetGroupAsset resource.
     *
     * @param {string} assetGroupAssetName
     *   A fully-qualified path representing AssetGroupAsset resource.
     * @returns {string} A string representing the asset_id.
     */
    matchAssetIdFromAssetGroupAssetName(assetGroupAssetName) {
        return this.pathTemplates.assetGroupAssetPathTemplate.match(assetGroupAssetName).asset_id;
    }
    /**
     * Parse the field_type from AssetGroupAsset resource.
     *
     * @param {string} assetGroupAssetName
     *   A fully-qualified path representing AssetGroupAsset resource.
     * @returns {string} A string representing the field_type.
     */
    matchFieldTypeFromAssetGroupAssetName(assetGroupAssetName) {
        return this.pathTemplates.assetGroupAssetPathTemplate.match(assetGroupAssetName).field_type;
    }
    /**
     * Return a fully-qualified assetGroupListingGroupFilter resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_group_id
     * @param {string} listing_group_filter_id
     * @returns {string} Resource name string.
     */
    assetGroupListingGroupFilterPath(customerId, assetGroupId, listingGroupFilterId) {
        return this.pathTemplates.assetGroupListingGroupFilterPathTemplate.render({
            customer_id: customerId,
            asset_group_id: assetGroupId,
            listing_group_filter_id: listingGroupFilterId,
        });
    }
    /**
     * Parse the customer_id from AssetGroupListingGroupFilter resource.
     *
     * @param {string} assetGroupListingGroupFilterName
     *   A fully-qualified path representing AssetGroupListingGroupFilter resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetGroupListingGroupFilterName(assetGroupListingGroupFilterName) {
        return this.pathTemplates.assetGroupListingGroupFilterPathTemplate.match(assetGroupListingGroupFilterName).customer_id;
    }
    /**
     * Parse the asset_group_id from AssetGroupListingGroupFilter resource.
     *
     * @param {string} assetGroupListingGroupFilterName
     *   A fully-qualified path representing AssetGroupListingGroupFilter resource.
     * @returns {string} A string representing the asset_group_id.
     */
    matchAssetGroupIdFromAssetGroupListingGroupFilterName(assetGroupListingGroupFilterName) {
        return this.pathTemplates.assetGroupListingGroupFilterPathTemplate.match(assetGroupListingGroupFilterName).asset_group_id;
    }
    /**
     * Parse the listing_group_filter_id from AssetGroupListingGroupFilter resource.
     *
     * @param {string} assetGroupListingGroupFilterName
     *   A fully-qualified path representing AssetGroupListingGroupFilter resource.
     * @returns {string} A string representing the listing_group_filter_id.
     */
    matchListingGroupFilterIdFromAssetGroupListingGroupFilterName(assetGroupListingGroupFilterName) {
        return this.pathTemplates.assetGroupListingGroupFilterPathTemplate.match(assetGroupListingGroupFilterName).listing_group_filter_id;
    }
    /**
     * Return a fully-qualified assetGroupProductGroupView resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_group_id
     * @param {string} listing_group_filter_id
     * @returns {string} Resource name string.
     */
    assetGroupProductGroupViewPath(customerId, assetGroupId, listingGroupFilterId) {
        return this.pathTemplates.assetGroupProductGroupViewPathTemplate.render({
            customer_id: customerId,
            asset_group_id: assetGroupId,
            listing_group_filter_id: listingGroupFilterId,
        });
    }
    /**
     * Parse the customer_id from AssetGroupProductGroupView resource.
     *
     * @param {string} assetGroupProductGroupViewName
     *   A fully-qualified path representing AssetGroupProductGroupView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetGroupProductGroupViewName(assetGroupProductGroupViewName) {
        return this.pathTemplates.assetGroupProductGroupViewPathTemplate.match(assetGroupProductGroupViewName).customer_id;
    }
    /**
     * Parse the asset_group_id from AssetGroupProductGroupView resource.
     *
     * @param {string} assetGroupProductGroupViewName
     *   A fully-qualified path representing AssetGroupProductGroupView resource.
     * @returns {string} A string representing the asset_group_id.
     */
    matchAssetGroupIdFromAssetGroupProductGroupViewName(assetGroupProductGroupViewName) {
        return this.pathTemplates.assetGroupProductGroupViewPathTemplate.match(assetGroupProductGroupViewName).asset_group_id;
    }
    /**
     * Parse the listing_group_filter_id from AssetGroupProductGroupView resource.
     *
     * @param {string} assetGroupProductGroupViewName
     *   A fully-qualified path representing AssetGroupProductGroupView resource.
     * @returns {string} A string representing the listing_group_filter_id.
     */
    matchListingGroupFilterIdFromAssetGroupProductGroupViewName(assetGroupProductGroupViewName) {
        return this.pathTemplates.assetGroupProductGroupViewPathTemplate.match(assetGroupProductGroupViewName).listing_group_filter_id;
    }
    /**
     * Return a fully-qualified assetGroupSignal resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_group_id
     * @param {string} criterion_id
     * @returns {string} Resource name string.
     */
    assetGroupSignalPath(customerId, assetGroupId, criterionId) {
        return this.pathTemplates.assetGroupSignalPathTemplate.render({
            customer_id: customerId,
            asset_group_id: assetGroupId,
            criterion_id: criterionId,
        });
    }
    /**
     * Parse the customer_id from AssetGroupSignal resource.
     *
     * @param {string} assetGroupSignalName
     *   A fully-qualified path representing AssetGroupSignal resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetGroupSignalName(assetGroupSignalName) {
        return this.pathTemplates.assetGroupSignalPathTemplate.match(assetGroupSignalName).customer_id;
    }
    /**
     * Parse the asset_group_id from AssetGroupSignal resource.
     *
     * @param {string} assetGroupSignalName
     *   A fully-qualified path representing AssetGroupSignal resource.
     * @returns {string} A string representing the asset_group_id.
     */
    matchAssetGroupIdFromAssetGroupSignalName(assetGroupSignalName) {
        return this.pathTemplates.assetGroupSignalPathTemplate.match(assetGroupSignalName).asset_group_id;
    }
    /**
     * Parse the criterion_id from AssetGroupSignal resource.
     *
     * @param {string} assetGroupSignalName
     *   A fully-qualified path representing AssetGroupSignal resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromAssetGroupSignalName(assetGroupSignalName) {
        return this.pathTemplates.assetGroupSignalPathTemplate.match(assetGroupSignalName).criterion_id;
    }
    /**
     * Return a fully-qualified assetGroupTopCombinationView resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_group_id
     * @param {string} asset_combination_category
     * @returns {string} Resource name string.
     */
    assetGroupTopCombinationViewPath(customerId, assetGroupId, assetCombinationCategory) {
        return this.pathTemplates.assetGroupTopCombinationViewPathTemplate.render({
            customer_id: customerId,
            asset_group_id: assetGroupId,
            asset_combination_category: assetCombinationCategory,
        });
    }
    /**
     * Parse the customer_id from AssetGroupTopCombinationView resource.
     *
     * @param {string} assetGroupTopCombinationViewName
     *   A fully-qualified path representing AssetGroupTopCombinationView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetGroupTopCombinationViewName(assetGroupTopCombinationViewName) {
        return this.pathTemplates.assetGroupTopCombinationViewPathTemplate.match(assetGroupTopCombinationViewName).customer_id;
    }
    /**
     * Parse the asset_group_id from AssetGroupTopCombinationView resource.
     *
     * @param {string} assetGroupTopCombinationViewName
     *   A fully-qualified path representing AssetGroupTopCombinationView resource.
     * @returns {string} A string representing the asset_group_id.
     */
    matchAssetGroupIdFromAssetGroupTopCombinationViewName(assetGroupTopCombinationViewName) {
        return this.pathTemplates.assetGroupTopCombinationViewPathTemplate.match(assetGroupTopCombinationViewName).asset_group_id;
    }
    /**
     * Parse the asset_combination_category from AssetGroupTopCombinationView resource.
     *
     * @param {string} assetGroupTopCombinationViewName
     *   A fully-qualified path representing AssetGroupTopCombinationView resource.
     * @returns {string} A string representing the asset_combination_category.
     */
    matchAssetCombinationCategoryFromAssetGroupTopCombinationViewName(assetGroupTopCombinationViewName) {
        return this.pathTemplates.assetGroupTopCombinationViewPathTemplate.match(assetGroupTopCombinationViewName).asset_combination_category;
    }
    /**
     * Return a fully-qualified assetSet resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_set_id
     * @returns {string} Resource name string.
     */
    assetSetPath(customerId, assetSetId) {
        return this.pathTemplates.assetSetPathTemplate.render({
            customer_id: customerId,
            asset_set_id: assetSetId,
        });
    }
    /**
     * Parse the customer_id from AssetSet resource.
     *
     * @param {string} assetSetName
     *   A fully-qualified path representing AssetSet resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetSetName(assetSetName) {
        return this.pathTemplates.assetSetPathTemplate.match(assetSetName).customer_id;
    }
    /**
     * Parse the asset_set_id from AssetSet resource.
     *
     * @param {string} assetSetName
     *   A fully-qualified path representing AssetSet resource.
     * @returns {string} A string representing the asset_set_id.
     */
    matchAssetSetIdFromAssetSetName(assetSetName) {
        return this.pathTemplates.assetSetPathTemplate.match(assetSetName).asset_set_id;
    }
    /**
     * Return a fully-qualified assetSetAsset resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_set_id
     * @param {string} asset_id
     * @returns {string} Resource name string.
     */
    assetSetAssetPath(customerId, assetSetId, assetId) {
        return this.pathTemplates.assetSetAssetPathTemplate.render({
            customer_id: customerId,
            asset_set_id: assetSetId,
            asset_id: assetId,
        });
    }
    /**
     * Parse the customer_id from AssetSetAsset resource.
     *
     * @param {string} assetSetAssetName
     *   A fully-qualified path representing AssetSetAsset resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetSetAssetName(assetSetAssetName) {
        return this.pathTemplates.assetSetAssetPathTemplate.match(assetSetAssetName).customer_id;
    }
    /**
     * Parse the asset_set_id from AssetSetAsset resource.
     *
     * @param {string} assetSetAssetName
     *   A fully-qualified path representing AssetSetAsset resource.
     * @returns {string} A string representing the asset_set_id.
     */
    matchAssetSetIdFromAssetSetAssetName(assetSetAssetName) {
        return this.pathTemplates.assetSetAssetPathTemplate.match(assetSetAssetName).asset_set_id;
    }
    /**
     * Parse the asset_id from AssetSetAsset resource.
     *
     * @param {string} assetSetAssetName
     *   A fully-qualified path representing AssetSetAsset resource.
     * @returns {string} A string representing the asset_id.
     */
    matchAssetIdFromAssetSetAssetName(assetSetAssetName) {
        return this.pathTemplates.assetSetAssetPathTemplate.match(assetSetAssetName).asset_id;
    }
    /**
     * Return a fully-qualified assetSetTypeView resource name string.
     *
     * @param {string} customer_id
     * @param {string} asset_set_type
     * @returns {string} Resource name string.
     */
    assetSetTypeViewPath(customerId, assetSetType) {
        return this.pathTemplates.assetSetTypeViewPathTemplate.render({
            customer_id: customerId,
            asset_set_type: assetSetType,
        });
    }
    /**
     * Parse the customer_id from AssetSetTypeView resource.
     *
     * @param {string} assetSetTypeViewName
     *   A fully-qualified path representing AssetSetTypeView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAssetSetTypeViewName(assetSetTypeViewName) {
        return this.pathTemplates.assetSetTypeViewPathTemplate.match(assetSetTypeViewName).customer_id;
    }
    /**
     * Parse the asset_set_type from AssetSetTypeView resource.
     *
     * @param {string} assetSetTypeViewName
     *   A fully-qualified path representing AssetSetTypeView resource.
     * @returns {string} A string representing the asset_set_type.
     */
    matchAssetSetTypeFromAssetSetTypeViewName(assetSetTypeViewName) {
        return this.pathTemplates.assetSetTypeViewPathTemplate.match(assetSetTypeViewName).asset_set_type;
    }
    /**
     * Return a fully-qualified audience resource name string.
     *
     * @param {string} customer_id
     * @param {string} audience_id
     * @returns {string} Resource name string.
     */
    audiencePath(customerId, audienceId) {
        return this.pathTemplates.audiencePathTemplate.render({
            customer_id: customerId,
            audience_id: audienceId,
        });
    }
    /**
     * Parse the customer_id from Audience resource.
     *
     * @param {string} audienceName
     *   A fully-qualified path representing Audience resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromAudienceName(audienceName) {
        return this.pathTemplates.audiencePathTemplate.match(audienceName).customer_id;
    }
    /**
     * Parse the audience_id from Audience resource.
     *
     * @param {string} audienceName
     *   A fully-qualified path representing Audience resource.
     * @returns {string} A string representing the audience_id.
     */
    matchAudienceIdFromAudienceName(audienceName) {
        return this.pathTemplates.audiencePathTemplate.match(audienceName).audience_id;
    }
    /**
     * Return a fully-qualified batchJob resource name string.
     *
     * @param {string} customer_id
     * @param {string} batch_job_id
     * @returns {string} Resource name string.
     */
    batchJobPath(customerId, batchJobId) {
        return this.pathTemplates.batchJobPathTemplate.render({
            customer_id: customerId,
            batch_job_id: batchJobId,
        });
    }
    /**
     * Parse the customer_id from BatchJob resource.
     *
     * @param {string} batchJobName
     *   A fully-qualified path representing BatchJob resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromBatchJobName(batchJobName) {
        return this.pathTemplates.batchJobPathTemplate.match(batchJobName).customer_id;
    }
    /**
     * Parse the batch_job_id from BatchJob resource.
     *
     * @param {string} batchJobName
     *   A fully-qualified path representing BatchJob resource.
     * @returns {string} A string representing the batch_job_id.
     */
    matchBatchJobIdFromBatchJobName(batchJobName) {
        return this.pathTemplates.batchJobPathTemplate.match(batchJobName).batch_job_id;
    }
    /**
     * Return a fully-qualified biddingDataExclusion resource name string.
     *
     * @param {string} customer_id
     * @param {string} seasonality_event_id
     * @returns {string} Resource name string.
     */
    biddingDataExclusionPath(customerId, seasonalityEventId) {
        return this.pathTemplates.biddingDataExclusionPathTemplate.render({
            customer_id: customerId,
            seasonality_event_id: seasonalityEventId,
        });
    }
    /**
     * Parse the customer_id from BiddingDataExclusion resource.
     *
     * @param {string} biddingDataExclusionName
     *   A fully-qualified path representing BiddingDataExclusion resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromBiddingDataExclusionName(biddingDataExclusionName) {
        return this.pathTemplates.biddingDataExclusionPathTemplate.match(biddingDataExclusionName).customer_id;
    }
    /**
     * Parse the seasonality_event_id from BiddingDataExclusion resource.
     *
     * @param {string} biddingDataExclusionName
     *   A fully-qualified path representing BiddingDataExclusion resource.
     * @returns {string} A string representing the seasonality_event_id.
     */
    matchSeasonalityEventIdFromBiddingDataExclusionName(biddingDataExclusionName) {
        return this.pathTemplates.biddingDataExclusionPathTemplate.match(biddingDataExclusionName).seasonality_event_id;
    }
    /**
     * Return a fully-qualified biddingSeasonalityAdjustment resource name string.
     *
     * @param {string} customer_id
     * @param {string} seasonality_event_id
     * @returns {string} Resource name string.
     */
    biddingSeasonalityAdjustmentPath(customerId, seasonalityEventId) {
        return this.pathTemplates.biddingSeasonalityAdjustmentPathTemplate.render({
            customer_id: customerId,
            seasonality_event_id: seasonalityEventId,
        });
    }
    /**
     * Parse the customer_id from BiddingSeasonalityAdjustment resource.
     *
     * @param {string} biddingSeasonalityAdjustmentName
     *   A fully-qualified path representing BiddingSeasonalityAdjustment resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromBiddingSeasonalityAdjustmentName(biddingSeasonalityAdjustmentName) {
        return this.pathTemplates.biddingSeasonalityAdjustmentPathTemplate.match(biddingSeasonalityAdjustmentName).customer_id;
    }
    /**
     * Parse the seasonality_event_id from BiddingSeasonalityAdjustment resource.
     *
     * @param {string} biddingSeasonalityAdjustmentName
     *   A fully-qualified path representing BiddingSeasonalityAdjustment resource.
     * @returns {string} A string representing the seasonality_event_id.
     */
    matchSeasonalityEventIdFromBiddingSeasonalityAdjustmentName(biddingSeasonalityAdjustmentName) {
        return this.pathTemplates.biddingSeasonalityAdjustmentPathTemplate.match(biddingSeasonalityAdjustmentName).seasonality_event_id;
    }
    /**
     * Return a fully-qualified biddingStrategy resource name string.
     *
     * @param {string} customer_id
     * @param {string} bidding_strategy_id
     * @returns {string} Resource name string.
     */
    biddingStrategyPath(customerId, biddingStrategyId) {
        return this.pathTemplates.biddingStrategyPathTemplate.render({
            customer_id: customerId,
            bidding_strategy_id: biddingStrategyId,
        });
    }
    /**
     * Parse the customer_id from BiddingStrategy resource.
     *
     * @param {string} biddingStrategyName
     *   A fully-qualified path representing BiddingStrategy resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromBiddingStrategyName(biddingStrategyName) {
        return this.pathTemplates.biddingStrategyPathTemplate.match(biddingStrategyName).customer_id;
    }
    /**
     * Parse the bidding_strategy_id from BiddingStrategy resource.
     *
     * @param {string} biddingStrategyName
     *   A fully-qualified path representing BiddingStrategy resource.
     * @returns {string} A string representing the bidding_strategy_id.
     */
    matchBiddingStrategyIdFromBiddingStrategyName(biddingStrategyName) {
        return this.pathTemplates.biddingStrategyPathTemplate.match(biddingStrategyName).bidding_strategy_id;
    }
    /**
     * Return a fully-qualified biddingStrategySimulation resource name string.
     *
     * @param {string} customer_id
     * @param {string} bidding_strategy_id
     * @param {string} type
     * @param {string} modification_method
     * @param {string} start_date
     * @param {string} end_date
     * @returns {string} Resource name string.
     */
    biddingStrategySimulationPath(customerId, biddingStrategyId, type, modificationMethod, startDate, endDate) {
        return this.pathTemplates.biddingStrategySimulationPathTemplate.render({
            customer_id: customerId,
            bidding_strategy_id: biddingStrategyId,
            type: type,
            modification_method: modificationMethod,
            start_date: startDate,
            end_date: endDate,
        });
    }
    /**
     * Parse the customer_id from BiddingStrategySimulation resource.
     *
     * @param {string} biddingStrategySimulationName
     *   A fully-qualified path representing BiddingStrategySimulation resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromBiddingStrategySimulationName(biddingStrategySimulationName) {
        return this.pathTemplates.biddingStrategySimulationPathTemplate.match(biddingStrategySimulationName).customer_id;
    }
    /**
     * Parse the bidding_strategy_id from BiddingStrategySimulation resource.
     *
     * @param {string} biddingStrategySimulationName
     *   A fully-qualified path representing BiddingStrategySimulation resource.
     * @returns {string} A string representing the bidding_strategy_id.
     */
    matchBiddingStrategyIdFromBiddingStrategySimulationName(biddingStrategySimulationName) {
        return this.pathTemplates.biddingStrategySimulationPathTemplate.match(biddingStrategySimulationName).bidding_strategy_id;
    }
    /**
     * Parse the type from BiddingStrategySimulation resource.
     *
     * @param {string} biddingStrategySimulationName
     *   A fully-qualified path representing BiddingStrategySimulation resource.
     * @returns {string} A string representing the type.
     */
    matchTypeFromBiddingStrategySimulationName(biddingStrategySimulationName) {
        return this.pathTemplates.biddingStrategySimulationPathTemplate.match(biddingStrategySimulationName).type;
    }
    /**
     * Parse the modification_method from BiddingStrategySimulation resource.
     *
     * @param {string} biddingStrategySimulationName
     *   A fully-qualified path representing BiddingStrategySimulation resource.
     * @returns {string} A string representing the modification_method.
     */
    matchModificationMethodFromBiddingStrategySimulationName(biddingStrategySimulationName) {
        return this.pathTemplates.biddingStrategySimulationPathTemplate.match(biddingStrategySimulationName).modification_method;
    }
    /**
     * Parse the start_date from BiddingStrategySimulation resource.
     *
     * @param {string} biddingStrategySimulationName
     *   A fully-qualified path representing BiddingStrategySimulation resource.
     * @returns {string} A string representing the start_date.
     */
    matchStartDateFromBiddingStrategySimulationName(biddingStrategySimulationName) {
        return this.pathTemplates.biddingStrategySimulationPathTemplate.match(biddingStrategySimulationName).start_date;
    }
    /**
     * Parse the end_date from BiddingStrategySimulation resource.
     *
     * @param {string} biddingStrategySimulationName
     *   A fully-qualified path representing BiddingStrategySimulation resource.
     * @returns {string} A string representing the end_date.
     */
    matchEndDateFromBiddingStrategySimulationName(biddingStrategySimulationName) {
        return this.pathTemplates.biddingStrategySimulationPathTemplate.match(biddingStrategySimulationName).end_date;
    }
    /**
     * Return a fully-qualified billingSetup resource name string.
     *
     * @param {string} customer_id
     * @param {string} billing_setup_id
     * @returns {string} Resource name string.
     */
    billingSetupPath(customerId, billingSetupId) {
        return this.pathTemplates.billingSetupPathTemplate.render({
            customer_id: customerId,
            billing_setup_id: billingSetupId,
        });
    }
    /**
     * Parse the customer_id from BillingSetup resource.
     *
     * @param {string} billingSetupName
     *   A fully-qualified path representing BillingSetup resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromBillingSetupName(billingSetupName) {
        return this.pathTemplates.billingSetupPathTemplate.match(billingSetupName).customer_id;
    }
    /**
     * Parse the billing_setup_id from BillingSetup resource.
     *
     * @param {string} billingSetupName
     *   A fully-qualified path representing BillingSetup resource.
     * @returns {string} A string representing the billing_setup_id.
     */
    matchBillingSetupIdFromBillingSetupName(billingSetupName) {
        return this.pathTemplates.billingSetupPathTemplate.match(billingSetupName).billing_setup_id;
    }
    /**
     * Return a fully-qualified callView resource name string.
     *
     * @param {string} customer_id
     * @param {string} call_detail_id
     * @returns {string} Resource name string.
     */
    callViewPath(customerId, callDetailId) {
        return this.pathTemplates.callViewPathTemplate.render({
            customer_id: customerId,
            call_detail_id: callDetailId,
        });
    }
    /**
     * Parse the customer_id from CallView resource.
     *
     * @param {string} callViewName
     *   A fully-qualified path representing CallView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromCallViewName(callViewName) {
        return this.pathTemplates.callViewPathTemplate.match(callViewName).customer_id;
    }
    /**
     * Parse the call_detail_id from CallView resource.
     *
     * @param {string} callViewName
     *   A fully-qualified path representing CallView resource.
     * @returns {string} A string representing the call_detail_id.
     */
    matchCallDetailIdFromCallViewName(callViewName) {
        return this.pathTemplates.callViewPathTemplate.match(callViewName).call_detail_id;
    }
    /**
     * Return a fully-qualified campaign resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @returns {string} Resource name string.
     */
    campaignPath(customerId, campaignId) {
        return this.pathTemplates.campaignPathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
        });
    }
    /**
     * Parse the customer_id from Campaign resource.
     *
     * @param {string} campaignName
     *   A fully-qualified path representing Campaign resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromCampaignName(campaignName) {
        return this.pathTemplates.campaignPathTemplate.match(campaignName).customer_id;
    }
    /**
     * Parse the campaign_id from Campaign resource.
     *
     * @param {string} campaignName
     *   A fully-qualified path representing Campaign resource.
     * @returns {string} A string representing the campaign_id.
     */
    matchCampaignIdFromCampaignName(campaignName) {
        return this.pathTemplates.campaignPathTemplate.match(campaignName).campaign_id;
    }
    /**
     * Return a fully-qualified campaignAggregateAssetView resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @param {string} asset_id
     * @param {string} asset_link_source
     * @param {string} field_type
     * @returns {string} Resource name string.
     */
    campaignAggregateAssetViewPath(customerId, campaignId, assetId, assetLinkSource, fieldType) {
        return this.pathTemplates.campaignAggregateAssetViewPathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
            asset_id: assetId,
            asset_link_source: assetLinkSource,
            field_type: fieldType,
        });
    }
    /**
     * Parse the customer_id from CampaignAggregateAssetView resource.
     *
     * @param {string} campaignAggregateAssetViewName
     *   A fully-qualified path representing CampaignAggregateAssetView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromCampaignAggregateAssetViewName(campaignAggregateAssetViewName) {
        return this.pathTemplates.campaignAggregateAssetViewPathTemplate.match(campaignAggregateAssetViewName).customer_id;
    }
    /**
     * Parse the campaign_id from CampaignAggregateAssetView resource.
     *
     * @param {string} campaignAggregateAssetViewName
     *   A fully-qualified path representing CampaignAggregateAssetView resource.
     * @returns {string} A string representing the campaign_id.
     */
    matchCampaignIdFromCampaignAggregateAssetViewName(campaignAggregateAssetViewName) {
        return this.pathTemplates.campaignAggregateAssetViewPathTemplate.match(campaignAggregateAssetViewName).campaign_id;
    }
    /**
     * Parse the asset_id from CampaignAggregateAssetView resource.
     *
     * @param {string} campaignAggregateAssetViewName
     *   A fully-qualified path representing CampaignAggregateAssetView resource.
     * @returns {string} A string representing the asset_id.
     */
    matchAssetIdFromCampaignAggregateAssetViewName(campaignAggregateAssetViewName) {
        return this.pathTemplates.campaignAggregateAssetViewPathTemplate.match(campaignAggregateAssetViewName).asset_id;
    }
    /**
     * Parse the asset_link_source from CampaignAggregateAssetView resource.
     *
     * @param {string} campaignAggregateAssetViewName
     *   A fully-qualified path representing CampaignAggregateAssetView resource.
     * @returns {string} A string representing the asset_link_source.
     */
    matchAssetLinkSourceFromCampaignAggregateAssetViewName(campaignAggregateAssetViewName) {
        return this.pathTemplates.campaignAggregateAssetViewPathTemplate.match(campaignAggregateAssetViewName).asset_link_source;
    }
    /**
     * Parse the field_type from CampaignAggregateAssetView resource.
     *
     * @param {string} campaignAggregateAssetViewName
     *   A fully-qualified path representing CampaignAggregateAssetView resource.
     * @returns {string} A string representing the field_type.
     */
    matchFieldTypeFromCampaignAggregateAssetViewName(campaignAggregateAssetViewName) {
        return this.pathTemplates.campaignAggregateAssetViewPathTemplate.match(campaignAggregateAssetViewName).field_type;
    }
    /**
     * Return a fully-qualified campaignAsset resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @param {string} asset_id
     * @param {string} field_type
     * @returns {string} Resource name string.
     */
    campaignAssetPath(customerId, campaignId, assetId, fieldType) {
        return this.pathTemplates.campaignAssetPathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
            asset_id: assetId,
            field_type: fieldType,
        });
    }
    /**
     * Parse the customer_id from CampaignAsset resource.
     *
     * @param {string} campaignAssetName
     *   A fully-qualified path representing CampaignAsset resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromCampaignAssetName(campaignAssetName) {
        return this.pathTemplates.campaignAssetPathTemplate.match(campaignAssetName).customer_id;
    }
    /**
     * Parse the campaign_id from CampaignAsset resource.
     *
     * @param {string} campaignAssetName
     *   A fully-qualified path representing CampaignAsset resource.
     * @returns {string} A string representing the campaign_id.
     */
    matchCampaignIdFromCampaignAssetName(campaignAssetName) {
        return this.pathTemplates.campaignAssetPathTemplate.match(campaignAssetName).campaign_id;
    }
    /**
     * Parse the asset_id from CampaignAsset resource.
     *
     * @param {string} campaignAssetName
     *   A fully-qualified path representing CampaignAsset resource.
     * @returns {string} A string representing the asset_id.
     */
    matchAssetIdFromCampaignAssetName(campaignAssetName) {
        return this.pathTemplates.campaignAssetPathTemplate.match(campaignAssetName).asset_id;
    }
    /**
     * Parse the field_type from CampaignAsset resource.
     *
     * @param {string} campaignAssetName
     *   A fully-qualified path representing CampaignAsset resource.
     * @returns {string} A string representing the field_type.
     */
    matchFieldTypeFromCampaignAssetName(campaignAssetName) {
        return this.pathTemplates.campaignAssetPathTemplate.match(campaignAssetName).field_type;
    }
    /**
     * Return a fully-qualified campaignAssetSet resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @param {string} asset_set_id
     * @returns {string} Resource name string.
     */
    campaignAssetSetPath(customerId, campaignId, assetSetId) {
        return this.pathTemplates.campaignAssetSetPathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
            asset_set_id: assetSetId,
        });
    }
    /**
     * Parse the customer_id from CampaignAssetSet resource.
     *
     * @param {string} campaignAssetSetName
     *   A fully-qualified path representing CampaignAssetSet resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromCampaignAssetSetName(campaignAssetSetName) {
        return this.pathTemplates.campaignAssetSetPathTemplate.match(campaignAssetSetName).customer_id;
    }
    /**
     * Parse the campaign_id from CampaignAssetSet resource.
     *
     * @param {string} campaignAssetSetName
     *   A fully-qualified path representing CampaignAssetSet resource.
     * @returns {string} A string representing the campaign_id.
     */
    matchCampaignIdFromCampaignAssetSetName(campaignAssetSetName) {
        return this.pathTemplates.campaignAssetSetPathTemplate.match(campaignAssetSetName).campaign_id;
    }
    /**
     * Parse the asset_set_id from CampaignAssetSet resource.
     *
     * @param {string} campaignAssetSetName
     *   A fully-qualified path representing CampaignAssetSet resource.
     * @returns {string} A string representing the asset_set_id.
     */
    matchAssetSetIdFromCampaignAssetSetName(campaignAssetSetName) {
        return this.pathTemplates.campaignAssetSetPathTemplate.match(campaignAssetSetName).asset_set_id;
    }
    /**
     * Return a fully-qualified campaignAudienceView resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @param {string} criterion_id
     * @returns {string} Resource name string.
     */
    campaignAudienceViewPath(customerId, campaignId, criterionId) {
        return this.pathTemplates.campaignAudienceViewPathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
            criterion_id: criterionId,
        });
    }
    /**
     * Parse the customer_id from CampaignAudienceView resource.
     *
     * @param {string} campaignAudienceViewName
     *   A fully-qualified path representing CampaignAudienceView resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromCampaignAudienceViewName(campaignAudienceViewName) {
        return this.pathTemplates.campaignAudienceViewPathTemplate.match(campaignAudienceViewName).customer_id;
    }
    /**
     * Parse the campaign_id from CampaignAudienceView resource.
     *
     * @param {string} campaignAudienceViewName
     *   A fully-qualified path representing CampaignAudienceView resource.
     * @returns {string} A string representing the campaign_id.
     */
    matchCampaignIdFromCampaignAudienceViewName(campaignAudienceViewName) {
        return this.pathTemplates.campaignAudienceViewPathTemplate.match(campaignAudienceViewName).campaign_id;
    }
    /**
     * Parse the criterion_id from CampaignAudienceView resource.
     *
     * @param {string} campaignAudienceViewName
     *   A fully-qualified path representing CampaignAudienceView resource.
     * @returns {string} A string representing the criterion_id.
     */
    matchCriterionIdFromCampaignAudienceViewName(campaignAudienceViewName) {
        return this.pathTemplates.campaignAudienceViewPathTemplate.match(campaignAudienceViewName).criterion_id;
    }
    /**
     * Return a fully-qualified campaignBidModifier resource name string.
     *
     * @param {string} customer_id
     * @param {string} campaign_id
     * @param {string} criterion_id
     * @returns {string} Resource name string.
     */
    campaignBidModifierPath(customerId, campaignId, criterionId) {
        return this.pathTemplates.campaignBidModifierPathTemplate.render({
            customer_id: customerId,
            campaign_id: campaignId,
            criterion_id: criterionId,
        });
    }
    /**
     * Parse the customer_id from CampaignBidModifier resource.
     *
     * @param {string} campaignBidModifierName
     *   A fully-qualified path representing CampaignBidModifier resource.
     * @returns {string} A string representing the customer_id.
     */
    matchCustomerIdFromCampaignBidModifierName(campaignBidModifierName) {
        return this.pathTemplates.campaignBidModifierPathTemplate.match(camp